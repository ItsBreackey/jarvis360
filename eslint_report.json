[{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\App.css","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: This experimental syntax requires enabling one of the following parser plugin(s): \"decorators\", \"decorators-legacy\". (1:0)","line":1,"column":0,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* You can add any custom CSS below here */\n","usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\App.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\App.jsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'isMapped' is assigned a value but never used.","line":382,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":382,"endColumn":43},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'devDiag', 'showCustomModalRef', and 'showToastRef'. Either include them or remove the dependency array.","line":754,"column":6,"nodeType":"ArrayExpression","endLine":754,"endColumn":127,"suggestions":[{"desc":"Update the dependencies array to be: [records, monthlySeries, method, monthsOut, holtAlpha, holtBeta, holtBootstrap, holtBootstrapSamples, holtBootstrapAsync, devDiag, showToastRef, showCustomModalRef]","fix":{"range":[37365,37486],"text":"[records, monthlySeries, method, monthsOut, holtAlpha, holtBeta, holtBootstrap, holtBootstrapSamples, holtBootstrapAsync, devDiag, showToastRef, showCustomModalRef]"}}]},{"ruleId":"no-unused-vars","severity":1,"message":"'estimateFn' is assigned a value but never used.","line":1471,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":1471,"endColumn":29},{"ruleId":"no-unused-vars","severity":1,"message":"'notify' is assigned a value but never used.","line":1535,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":1535,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'estimateChurnFromFeatures' is assigned a value but never used.","line":1565,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":1565,"endColumn":34},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a missing dependency: 'estimateChurnFromFeaturesDetailed'. Either include it or remove the dependency array.","line":1615,"column":6,"nodeType":"ArrayExpression","endLine":1615,"endColumn":42,"suggestions":[{"desc":"Update the dependencies array to be: [customers, computeChurnWhenMissing, estimateChurnFromFeaturesDetailed]","fix":{"range":[91379,91415],"text":"[customers, computeChurnWhenMissing, estimateChurnFromFeaturesDetailed]"}}]}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'estimateChurnFromFeaturesDetailed'. Either include it or remove the dependency array.","line":1663,"column":6,"nodeType":"ArrayExpression","endLine":1663,"endColumn":42,"suggestions":[{"desc":"Update the dependencies array to be: [computeChurnWhenMissing, customers, estimateChurnFromFeaturesDetailed]","fix":{"range":[93819,93855],"text":"[computeChurnWhenMissing, customers, estimateChurnFromFeaturesDetailed]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './App.css';\r\n\r\n\r\n\r\nimport React, { useState, useCallback, useMemo, useRef, useEffect } from 'react';\r\nimport auth from './utils/auth';\r\nimport { parseCSV } from './utils/csv';\r\nimport logo from './d2m_logo.png';\r\nimport Toast from './Toast';\r\nimport ChurnChart from './ChurnChart';\r\nimport { computeMonthlySeries as computeMonthlySeriesUtil, holtAutoTune, holtAutoTuneAdvanced } from './utils/analytics';\r\nimport { generateScenarioSummary } from './utils/summarizer';\r\nimport { LineChart, Line, Area, XAxis, YAxis, CartesianGrid, Tooltip as ReTooltip, ResponsiveContainer, Brush, Legend } from 'recharts';\r\nimport { computeForecastFromRecords } from './utils/forecast';\r\n\r\n// --- Utility Functions (Core Logic) ---\r\n\r\n/**\r\n * Calculates a churn risk score (0-100) based on multiple factors.\r\n * @param {object} customer - Customer data object.\r\n * @returns {number} The calculated risk score.\r\n */\r\nconst calculateChurnRiskScore = (customer) => {\r\n  const { MRR, churnProbability, supportTickets, lastActivityDays } = customer;\r\n\r\n  // Weights for different factors (sum should ideally be 1.0)\r\n  const weightProbability = 0.5;\r\n  const weightTickets = 0.2;\r\n  const weightActivity = 0.2;\r\n  const weightMRR = 0.1; \r\n\r\n  // Normalize data and assign risk components\r\n  let probRisk = parseFloat(churnProbability) || 0;\r\n  let ticketRisk = Math.min((parseFloat(supportTickets) || 0) / 10, 1); // 10+ tickets = max risk component\r\n  let activityRisk = Math.min((parseFloat(lastActivityDays) || 0) / 60, 1); // 60+ days of inactivity = max risk component\r\n  // Lower MRR is higher risk (small customers churn more easily)\r\n  let mrrRisk = 1 - Math.min((parseFloat(MRR) || 0) / 2000, 1); \r\n\r\n  const score = (\r\n    (probRisk * weightProbability) +\r\n    (ticketRisk * weightTickets) +\r\n    (activityRisk * weightActivity) +\r\n    (mrrRisk * weightMRR)\r\n  ) * 100;\r\n\r\n  return Math.max(0, Math.min(100, score));\r\n};\r\n\r\n/**\r\n * Formats a number into US dollar currency string.\r\n * @param {number} amount - The numeric amount to format.\r\n * @returns {string} Formatted currency string.\r\n */\r\nconst formatCurrency = (amount) => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(amount);\r\n};\r\n\r\n// (svg-to-png helpers removed) use html2canvas-based exporters below for full-container captures\r\n\r\n// html2canvas helper (loaded dynamically from CDN as a fallback)\r\nlet _html2canvasPromise = null;\r\nconst ensureHtml2Canvas = () => {\r\n  if (_html2canvasPromise) return _html2canvasPromise;\r\n  _html2canvasPromise = (async () => {\r\n    // try dynamic import from local node_modules first\r\n    try {\r\n      const mod = await import('html2canvas');\r\n      return mod.default || mod;\r\n    } catch (e) {\r\n      // fallback to global CDN loader\r\n      if (typeof window.html2canvas !== 'undefined') return window.html2canvas;\r\n      await new Promise((resolve, reject) => {\r\n        const s = document.createElement('script');\r\n        s.src = 'https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js';\r\n        s.onload = () => resolve();\r\n        s.onerror = (err) => reject(err);\r\n        document.head.appendChild(s);\r\n      });\r\n      return window.html2canvas;\r\n    }\r\n  })();\r\n  return _html2canvasPromise;\r\n};\r\n\r\n// Export any element (container) to PNG using html2canvas\r\nconst exportElementToPng = async (el, filename = 'chart.png', scale = 2) => {\r\n  if (!el) return false;\r\n  try {\r\n    const html2canvas = await ensureHtml2Canvas();\r\n    const canvas = await html2canvas(el, { scale: Math.max(1, scale), useCORS: true, backgroundColor: getComputedStyle(document.body).backgroundColor || '#fff' });\r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) return resolve(false);\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = filename;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n        resolve(true);\r\n      }, 'image/png');\r\n    });\r\n  } catch (e) {\r\n    console.error('exportElementToPng failed', e);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Copy an element's rasterized PNG to clipboard\r\nconst copyElementToClipboard = async (el, scale = 2) => {\r\n  if (!el || !navigator.clipboard) return false;\r\n  try {\r\n    const html2canvas = await ensureHtml2Canvas();\r\n    const canvas = await html2canvas(el, { scale: Math.max(1, scale), useCORS: true, backgroundColor: getComputedStyle(document.body).backgroundColor || '#fff' });\r\n    const blob = await new Promise((res) => canvas.toBlob(res, 'image/png'));\r\n    if (!blob) return false;\r\n    const clipboardItem = new ClipboardItem({ 'image/png': blob });\r\n    await navigator.clipboard.write([clipboardItem]);\r\n    return true;\r\n  } catch (e) {\r\n    console.error('copyElementToClipboard failed', e);\r\n    return false;\r\n  }\r\n};\r\n\r\n// CustomModal removed in favor of toasts. showCustomModal routes to showToast below.\r\n\r\n  \r\n\r\n// --- View Components ---\r\n\r\n// Component 1: Data Dashboard (The main hub, includes data upload)\r\nconst DataDashboard = ({ onDataUpload, showCustomModal, seedInitialData, showToast = null }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadedCount, setUploadedCount] = useState(0);\r\n  const [previewHeaders, setPreviewHeaders] = useState([]);\r\n  const [previewRows, setPreviewRows] = useState([]);\r\n  const [showMalformed, setShowMalformed] = useState(false);\r\n  // Persisted header mapping (loads from localStorage if present)\r\n  const HEADER_MAPPING_KEY = 'jarvis_header_mapping_v1';\r\n  const defaultMapping = { dateKey: null, mrrKey: 'MRR', idKey: 'id', churnKey: null, supportKey: null, lastActivityKey: null };\r\n  const [mapping, setMapping] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(HEADER_MAPPING_KEY);\r\n      if (raw) return { ...defaultMapping, ...JSON.parse(raw) };\r\n    } catch (e) { /* ignore */ }\r\n    return defaultMapping;\r\n  });\r\n\r\n  // save mapping to localStorage when it changes\r\n  useEffect(() => {\r\n    try { localStorage.setItem(HEADER_MAPPING_KEY, JSON.stringify(mapping)); } catch (e) { /* ignore */ }\r\n  }, [mapping]);\r\n\r\n  // expected headers kept for reference if needed later\r\n\r\n  // parseCSV moved to ./utils/csv.js\r\n\r\n\r\n  const handleFileUpload = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n  if (uploadedFile && uploadedFile.name.endsWith('.csv')) {\r\n      setFile(uploadedFile);\r\n      setUploadedCount(0);\r\n      // read header preview\r\n      const reader = new FileReader();\r\n      reader.onload = (ev) => {\r\n        const text = ev.target.result || '';\r\n        const firstLine = text.split('\\n')[0] || '';\r\n        const headers = firstLine.split(',').map(h => h.trim());\r\n        setPreviewHeaders(headers);\r\n        // parse preview rows (first 10) quickly\r\n        try {\r\n          const lines = text.split('\\n').slice(1, 11);\r\n          const previews = lines.map(l => {\r\n            const cols = l.split(',');\r\n            const obj = {};\r\n            headers.forEach((h, idx) => { obj[h] = cols[idx] !== undefined ? cols[idx].trim() : ''; });\r\n            return obj;\r\n          }).filter(r => Object.keys(r).length > 0);\r\n          setPreviewRows(previews);\r\n        } catch (e) { setPreviewRows([]); }\r\n        // set sensible defaults\r\n        setMapping({ dateKey: headers.find(h => /date|month|created_at|uploadedat/i.test(h)) || null, mrrKey: headers.find(h => /mrr|revenue|amount|value/i.test(h)) || 'MRR', idKey: headers.find(h => /id|name|customer/i.test(h)) || 'id' });\r\n      };\r\n      reader.readAsText(uploadedFile);\r\n    } else {\r\n      setFile(null);\r\n      (showToast || showCustomModal)(\"Please upload a valid CSV file.\", 'error');\r\n    }\r\n  };\r\n\r\n  // Detect malformed uploads (missing date or MRR-like columns)\r\n  useEffect(() => {\r\n    try {\r\n      // only evaluate after we have detected headers (i.e., after a file preview)\r\n      if (!previewHeaders || previewHeaders.length === 0) {\r\n        setShowMalformed(false);\r\n        return;\r\n      }\r\n      const dateCandidate = mapping.dateKey || previewHeaders.find(h => /date|month|created_at|uploadedat|start_date|signupDate/i.test(h));\r\n      const mrrCandidate = mapping.mrrKey || previewHeaders.find(h => /mrr|revenue|amount|value/i.test(h));\r\n      setShowMalformed(!(dateCandidate && mrrCandidate));\r\n    } catch (e) { setShowMalformed(false); }\r\n  }, [previewHeaders, mapping]);\r\n\r\n  const handleProcessFile = async () => {\r\n    if (!file) {\r\n      (showToast || showCustomModal)(\"No valid file selected.\", 'error');\r\n      return;\r\n    }\r\n    setUploadedCount(0);\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (event) => {\r\n      try {\r\n        const csvText = event.target.result;\r\n        const customerData = parseCSV(csvText, mapping);\r\n\r\n        if (customerData.length === 0) {\r\n          (showToast || showCustomModal)(\"Could not parse any valid data from the CSV. Please check the format.\", 'error');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        onDataUpload(customerData, mapping);\r\n\r\n        // If authenticated, try to upload to server for persistence\r\n        try {\r\n          const meUser = await auth.me();\r\n          if (meUser && file) {\r\n            const form = new FormData();\r\n            form.append('file', file, file.name);\r\n            const resp = await auth.apiFetch('/api/uploads/', { method: 'POST', body: form });\r\n            if (resp.ok) {\r\n              (showToast || showCustomModal)(`Uploaded ${customerData.length} rows to server.`, 'success');\r\n            } else {\r\n              console.warn('Server upload failed', resp.status);\r\n              (showToast || showCustomModal)(`Local load succeeded; server upload failed (${resp.status}).`, 'warn');\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.error('Upload to server failed', e);\r\n          (showToast || showCustomModal)('Local load succeeded; server upload error. See console.', 'warn');\r\n        }\r\n\r\n        setUploadedCount(customerData.length);\r\n        (showToast || showCustomModal)(`Successfully loaded ${customerData.length} new customer records into memory!`, 'success');\r\n      } catch (error) {\r\n        console.error(\"Error during file processing:\", error);\r\n        (showToast || showCustomModal)(`Error processing data: ${error.message}`, 'error');\r\n      } finally {\r\n        setLoading(false);\r\n        setFile(null);\r\n        setPreviewRows([]);\r\n      }\r\n    };\r\n\r\n    reader.onerror = (error) => {\r\n      console.error(\"File read error:\", error);\r\n      (showToast || showCustomModal)(\"Failed to read the file.\", 'error');\r\n      setLoading(false);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Mapping preview UI helpers\r\n  const HeaderSelector = ({ label, value, onChange }) => (\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\r\n      <select value={value || ''} onChange={(e) => onChange(e.target.value)} className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm p-2 bg-white\">\r\n        <option value=\"\">(none)</option>\r\n        {previewHeaders.map(h => <option key={h} value={h}>{h}</option>)}\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4 md:p-8\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6 border-b pb-2\">Data Intake & Preparation</h2>\r\n\r\n      <div className=\"bg-white p-6 shadow-xl rounded-xl border border-gray-100\">\r\n        <p className=\"text-gray-700 mb-4\">\r\n            Upload a **CSV file** to populate the customer data. Data is stored **only in your browser's memory** and is not persistent.\r\n        </p>\r\n\r\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n          <h4 className=\"font-semibold text-blue-800 mb-2\">Required CSV Format (Headers):</h4>\r\n          <p className=\"text-sm text-blue-800 mb-2\">At minimum include a Date column and an MRR (revenue) column. Common header names:</p>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n            <div>\r\n              <div className=\"text-xs text-blue-700 font-semibold\">Date aliases</div>\r\n              <code className=\"block bg-blue-100 p-2 rounded text-sm text-blue-900 overflow-x-auto\">date, month, created_at, createdAt, uploadedAt, start_date, signupDate</code>\r\n            </div>\r\n            <div>\r\n              <div className=\"text-xs text-blue-700 font-semibold\">MRR / Revenue aliases</div>\r\n              <code className=\"block bg-blue-100 p-2 rounded text-sm text-blue-900 overflow-x-auto\">MRR, revenue, amount, value, price, monthly_revenue</code>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 text-sm text-blue-700\">Other helpful columns: <code className=\"bg-blue-100 p-1 rounded\">name</code>, <code className=\"bg-blue-100 p-1 rounded\">churnProbability</code>, <code className=\"bg-blue-100 p-1 rounded\">supportTickets</code></div>\r\n          <div className=\"mt-2 text-xs text-blue-600\">\r\n            Churn formats accepted: decimal probability (e.g., <code className=\"bg-blue-50 p-1 rounded\">0.12</code>) or percent (e.g., <code className=\"bg-blue-50 p-1 rounded\">12%</code>). The parser normalizes percent values to 0–1. Empty churn values will be set to 0 and can be estimated by the Churn Predictor if you enable the heuristic.\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col sm:flex-row items-center space-y-4 sm:space-y-0 sm:space-x-4\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            onChange={handleFileUpload}\r\n            className=\"flex-1 w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700\"\r\n          />\r\n        </div>\r\n\r\n        {showMalformed && (\r\n          <div className=\"mt-4 p-3 rounded bg-red-50 border border-red-100 text-red-700 text-sm\">\r\n            Warning: uploaded CSV does not appear to contain a recognizable Date, Name and/or MRR column. Please verify your headers or adjust the column selectors below.\r\n          </div>\r\n        )}\r\n        {previewHeaders.length > 0 && (\r\n          <>\r\n            {/* Suggested header picks (moved above preview) */}\r\n            <div className=\"mt-3 p-3 bg-yellow-50 rounded border border-yellow-100 text-sm\">\r\n              {(() => {\r\n                    const suggestedDate = previewHeaders.find(h => /date|month|created_at|createdAt|uploadedAt|start_date|signupDate/i.test(h));\r\n                    const suggestedMrr = previewHeaders.find(h => /mrr|revenue|amount|value|price|monthly_revenue/i.test(h));\r\n                    const suggestedChurn = previewHeaders.find(h => /churn|churnProbability|churn_prob|churn_rate|churn%/i.test(h));\r\n                    const suggestedSupport = previewHeaders.find(h => /support|ticket|tickets|open_tickets|num_tickets/i.test(h));\r\n                    const suggestedLastActivity = previewHeaders.find(h => /lastActivity|last_activity|last_login|days_ago|days_inactive|inactive_days|lastSeen|last_seen/i.test(h));\r\n                    return (\r\n                      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n                        <div className=\"mb-2 sm:mb-0\">\r\n                          <div><strong>Suggested Date:</strong> {suggestedDate || <span className=\"text-gray-500\">(none detected)</span>}</div>\r\n                          <div><strong>Suggested MRR:</strong> {suggestedMrr ? suggestedMrr : <span className=\"text-gray-500\">(none detected)</span>}</div>\r\n                          <div><strong>Suggested Churn:</strong> {suggestedChurn || <span className=\"text-gray-500\">(none detected)</span>}</div>\r\n                          <div><strong>Suggested Support Tickets:</strong> {suggestedSupport || <span className=\"text-gray-500\">(none detected)</span>}</div>\r\n                          <div><strong>Suggested Last Activity:</strong> {suggestedLastActivity || <span className=\"text-gray-500\">(none detected)</span>}</div>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <button className=\"px-3 py-1 bg-green-600 text-white rounded text-sm\" onClick={() => {\r\n                            // accept suggestions into mapping if present\r\n                            setMapping(prev => ({ ...prev, dateKey: suggestedDate || prev.dateKey, mrrKey: suggestedMrr || prev.mrrKey, churnKey: suggestedChurn || prev.churnKey, supportKey: suggestedSupport || prev.supportKey, lastActivityKey: suggestedLastActivity || prev.lastActivityKey }));\r\n                            (showToast || showCustomModal)('Suggested header mapping applied.', 'success');\r\n                          }}>Accept Suggestions</button>\r\n                          <button className=\"px-3 py-1 bg-gray-100 rounded text-sm\" onClick={() => { setMapping({ dateKey: null, mrrKey: 'MRR', idKey: 'id', churnKey: null, supportKey: null, lastActivityKey: null }); (showToast || showCustomModal)('Reset header mapping.', 'info'); }}>Reset</button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n            </div>\r\n\r\n            <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-4 gap-4\">\r\n              <HeaderSelector label=\"Date Column\" value={mapping.dateKey} onChange={(v) => setMapping(prev => ({ ...prev, dateKey: v }))} />\r\n              <HeaderSelector label=\"MRR Column\" value={mapping.mrrKey} onChange={(v) => setMapping(prev => ({ ...prev, mrrKey: v }))} />\r\n              <HeaderSelector label=\"Churn Column\" value={mapping.churnKey} onChange={(v) => setMapping(prev => ({ ...prev, churnKey: v }))} />\r\n              <HeaderSelector label=\"Support Tickets Column\" value={mapping.supportKey} onChange={(v) => setMapping(prev => ({ ...prev, supportKey: v }))} />\r\n              <HeaderSelector label=\"Last Activity Column\" value={mapping.lastActivityKey} onChange={(v) => setMapping(prev => ({ ...prev, lastActivityKey: v }))} />\r\n              <HeaderSelector label=\"ID / Name Column\" value={mapping.idKey} onChange={(v) => setMapping(prev => ({ ...prev, idKey: v }))} />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Preview rows only */}\r\n            <div className=\"mt-6\">\r\n          <div className=\"bg-white p-4 rounded border overflow-x-auto\">\r\n            <h4 className=\"font-semibold text-gray-700 mb-2\">Preview Rows</h4>\r\n            {previewRows.length === 0 ? (\r\n              <div className=\"text-xs text-gray-500\">No preview available.</div>\r\n            ) : (\r\n              <div style={{ minWidth: Math.max(previewHeaders.length * 140, 600) }}>\r\n                <table className=\"w-full text-sm table-auto whitespace-nowrap\">\r\n                  <thead>\r\n                    <tr>\r\n                          {previewHeaders.map(h => {\r\n                            const isMapped = h && (h === mapping.dateKey || h === mapping.mrrKey || h === mapping.churnKey || h === mapping.supportKey || h === mapping.lastActivityKey || h === mapping.idKey);\r\n                            return <th key={h} className={`text-left pr-4 font-medium text-gray-600`}>{h}</th>;\r\n                          })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {previewRows.map((r, idx) => (\r\n                          <tr key={idx} className=\"border-t\">\r\n                        {previewHeaders.map(h => <td key={h} className=\"py-1 pr-4\">{r[h]}</td>)}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-4 flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <button\r\n                onClick={handleProcessFile}\r\n                disabled={!file || loading}\r\n                className=\"px-4 py-2 text-white bg-green-600 hover:bg-green-700 rounded shadow disabled:opacity-60 disabled:cursor-not-allowed\"\r\n              >\r\n                {loading ? 'Processing...' : `Process File ${file ? `(${file.name})` : ''}`}\r\n              </button>\r\n              {uploadedCount > 0 && (\r\n                <p className=\"text-sm font-medium text-green-700\">Loaded {uploadedCount} records.</p>\r\n              )}\r\n            </div>\r\n      <button id=\"load-demo-btn\"\r\n        type=\"button\"\r\n        aria-label=\"Load demo dataset\"\r\n        onClick={async () => {\r\n          setLoading(true);\r\n          try {\r\n            const resp = await fetch('/demo_sample.csv');\r\n            const txt = await resp.text();\r\n            const parsed = parseCSV(txt, { dateKey: 'date', mrrKey: 'MRR', idKey: 'name' });\r\n            if (parsed && parsed.length) {\r\n              onDataUpload(parsed, { dateKey: 'date', mrrKey: 'MRR', idKey: 'name' });\r\n              setUploadedCount(parsed.length);\r\n              (showToast || showCustomModal)(`Loaded demo dataset (${parsed.length} rows)`, 'success');\r\n            } else {\r\n              (showToast || showCustomModal)('Demo data failed to parse.', 'error');\r\n            }\r\n          } catch (e) {\r\n            console.error('Load demo failed', e);\r\n            // Fallback for test environments (jsdom/no network): seed local dummy data instead\r\n            try {\r\n              seedInitialData();\r\n              (showToast || showCustomModal)('Loaded demo dataset (fallback seed).', 'info');\r\n            } catch (se) {\r\n              console.error('Fallback seed failed', se);\r\n              (showToast || showCustomModal)('Failed to load demo data.', 'error');\r\n            }\r\n          } finally { setLoading(false); }\r\n        }}\r\n        className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\r\n      >\r\n        Load Demo\r\n      </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mt-10 p-6 bg-yellow-50 rounded-xl border border-yellow-200 text-gray-700\">\r\n          <h3 className=\"font-semibold text-lg text-yellow-800 mb-2\">Welcome to the SaaS Analytics Suite!</h3>\r\n          <p>\r\n              Use the tabs above to navigate the different modules: view your **Data Overview**, predict churn in the **Churn Predictor**, or run scenarios in the **What-If Simulation**.\r\n          </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Small AuthPanel to register/login/logout\r\nconst AuthPanel = ({ showToast = null }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [orgName, setOrgName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [meUser, setMeUser] = useState(null);\r\n\r\n  const refreshMe = useCallback(async () => {\r\n    const u = await auth.me();\r\n    setMeUser(u ? u.username : null);\r\n  }, []);\r\n\r\n  useEffect(() => { refreshMe(); }, [refreshMe]);\r\n\r\n  const doRegister = async () => {\r\n    setLoading(true); setError(null);\r\n    try {\r\n      await auth.register({ username, password, org_name: orgName || username, set_cookie: true });\r\n      (showToast || (()=>{}))('Registration successful — logged in (cookie set).', 'success');\r\n      setUsername(''); setPassword(''); setOrgName('');\r\n      await refreshMe();\r\n    } catch (e) {\r\n      console.error('Register failed', e);\r\n      setError('Registration failed.');\r\n    } finally { setLoading(false); }\r\n  };\r\n\r\n  const doLogin = async () => {\r\n    setLoading(true); setError(null);\r\n    try {\r\n      await auth.login({ username, password, use_cookie: true });\r\n      (showToast || (()=>{}))('Login successful.', 'success');\r\n      setUsername(''); setPassword('');\r\n      await refreshMe();\r\n    } catch (e) {\r\n      console.error('Login failed', e);\r\n      setError('Login failed. Check credentials.');\r\n    } finally { setLoading(false); }\r\n  };\r\n\r\n  const doLogout = async () => {\r\n    await auth.logout();\r\n    (showToast || (()=>{}))('Logged out.', 'info');\r\n    setMeUser(null);\r\n  };\r\n\r\n  if (meUser) {\r\n    return (\r\n      <div className=\"flex items-center space-x-2\">\r\n        <div className=\"text-xs text-gray-600\">{meUser ? `Signed in as ${meUser}` : `Signed in`}</div>\r\n        <button className=\"px-3 py-1 text-xs bg-red-100 text-red-700 rounded\" onClick={doLogout}>Logout</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <input placeholder=\"org (for register)\" value={orgName} onChange={(e) => setOrgName(e.target.value)} className=\"text-xs p-1 rounded border\" />\r\n      <input placeholder=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"text-xs p-1 rounded border\" />\r\n      <input placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" className=\"text-xs p-1 rounded border\" />\r\n      <button className=\"px-3 py-1 bg-green-600 text-white rounded text-xs\" disabled={loading} onClick={doLogin}>Login</button>\r\n      <button className=\"px-3 py-1 bg-blue-600 text-white rounded text-xs\" disabled={loading} onClick={doRegister}>Register</button>\r\n      {error && <div className=\"text-xs text-red-600\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Use computeMonthlySeries from utilities\r\nconst computeMonthlySeries = computeMonthlySeriesUtil;\r\n\r\n\r\n// Component 2: Data Overview\r\nconst DataOverview = ({ overviewData }) => {\r\n    const StatCard = ({ title, value, description }) => (\r\n        <div className=\"bg-white p-5 rounded-xl shadow-md border border-gray-200\">\r\n          <p className=\"text-sm font-medium text-gray-500 truncate\">{title}</p>\r\n          <p className=\"mt-1 text-3xl font-extrabold text-gray-900\">{value}</p>\r\n          <p className=\"mt-2 text-xs text-gray-500\">{description}</p>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"p-4 md:p-8\">\r\n  <h2 className=\"text-3xl font-bold text-gray-900 mb-6 border-b pb-2\">Overview — Key Metrics</h2>\r\n  \r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <StatCard title=\"Total Customers\" value={overviewData?.customerCount || 'N/A'} description=\"Current customer count loaded.\" />\r\n          <StatCard title=\"Total Monthly Revenue\" value={formatCurrency(overviewData?.totalMRR || 0)} description=\"Sum of all customers' MRR.\" />\r\n          <StatCard title=\"Average MRR\" value={formatCurrency(overviewData?.avgMrr || 0)} description=\"Monthly Recurring Revenue per customer.\" />\r\n          <StatCard title=\"Est. Annual Revenue\" value={formatCurrency(overviewData?.totalRevenue || 0)} description=\"Total MRR multiplied by 12.\" />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-6 mt-6\">\r\n          <StatCard title=\"Churned MRR (est)\" value={formatCurrency(overviewData?.churnedMRR || 0)} description=\"Heuristic of at-risk monthly MRR.\" />\r\n          <StatCard title=\"Estimated NRR\" value={`${Math.round((overviewData?.estimatedNRR || 1) * 100)}%`} description=\"Net Revenue Retention (approx).\" />\r\n          <StatCard title=\"Churn % (by count)\" value={`${Math.round((overviewData?.churnRateByCount || 0) * 100)}%`} description=\"Percent of customers flagged as at-risk.\" />\r\n        </div>\r\n        <div className=\"mt-8 p-6 bg-white shadow-xl rounded-xl border border-gray-100\">\r\n          <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Core Metrics Chart</h3>\r\n          <p className=\"text-gray-600\">New vs Expansion vs Churn (monthly) — simple stacked view.</p>\r\n          {overviewData?.monthlySeries && overviewData.monthlySeries.length > 0 ? (\r\n            <ChurnChart data={overviewData.monthlySeries} />\r\n          ) : (\r\n            <div className=\"h-48 bg-gray-50 border border-dashed border-gray-300 rounded-lg mt-4 flex items-center justify-center text-gray-400\">\r\n              [Chart Placeholder: Visualizing Loaded Customer Data Distributions]\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\n// Component 3: Time-Series Forecast (Recharts-based)\r\nconst TimeSeriesForecast = ({ chartRef, monthlySeries = [], records = [], showCustomModal = () => {}, showToast = null, showToastRef = { current: null }, showCustomModalRef = { current: null } }) => {\r\n  const [monthsOut, setMonthsOut] = useState(12);\r\n  const [method, setMethod] = useState('linear'); // 'linear' or 'holt'\r\n  // Holt smoothing parameters (persisted in localStorage)\r\n  const HOLTPREF = 'jarvis_holt_prefs_v1';\r\n  const storedHolt = (() => { try { return JSON.parse(localStorage.getItem(HOLTPREF) || '{}'); } catch (e) { return {}; } })();\r\n  const [holtAlpha, setHoltAlpha] = useState(storedHolt.alpha || 0.6);\r\n  const [holtBeta, setHoltBeta] = useState(storedHolt.beta || 0.2);\r\n  const [holtBootstrap, setHoltBootstrap] = useState(storedHolt.bootstrap || false);\r\n  const [holtBootstrapSamples, setHoltBootstrapSamples] = useState(storedHolt.bootstrapSamples || 200);\r\n  const [holtBootstrapAsync, setHoltBootstrapAsync] = useState(storedHolt.bootstrapAsync || false);\r\n  const [tuning, setTuning] = useState(false);\r\n\r\n  // Prepare numeric series from monthlySeries: [{period: 'YYYY-MM', total}]\r\n  const series = useMemo(() => {\r\n    if (!monthlySeries || !Array.isArray(monthlySeries) || monthlySeries.length === 0) return [];\r\n    // Ensure sorted by period\r\n    const parsed = monthlySeries.map((m) => ({ period: m.period, total: Number(m.total || 0) }));\r\n    parsed.sort((a, b) => a.period.localeCompare(b.period));\r\n    return parsed;\r\n  }, [monthlySeries]);\r\n\r\n  // forecastResult is computed via an async-aware flow below (forecastResultState)\r\n\r\n  const [forecastResultState, setForecastResultState] = useState(null);\r\n\r\n  const combined = useMemo(() => {\r\n    if (!series) return [];\r\n    const actual = series.map(s => ({ period: s.period, actual: s.total }));\r\n    const fc = (forecastResultState || {}).forecast || [];\r\n    // merge by period to single objects Recharts likes\r\n    const map = {};\r\n    actual.forEach(a => { map[a.period] = map[a.period] || {}; map[a.period].period = a.period; map[a.period].actual = a.actual; });\r\n    fc.forEach(f => { map[f.period] = map[f.period] || {}; map[f.period].period = f.period; map[f.period].predicted = f.predicted; map[f.period].lower = f.lower; map[f.period].upper = f.upper; });\r\n    return Object.keys(map).sort().map(k => map[k]);\r\n  }, [series, forecastResultState]);\r\n\r\n  const downloadCSV = () => {\r\n    const rows = [];\r\n    // header\r\n    rows.push(['period','actual','predicted','lower','upper'].join(','));\r\n    // merge actuals and forecasts by period\r\n    const map = {};\r\n    series.forEach(s => { map[s.period] = map[s.period] || {}; map[s.period].actual = s.total; });\r\n  (forecastResultState?.forecast || []).forEach(f => { map[f.period] = map[f.period] || {}; map[f.period].predicted = f.predicted; map[f.period].lower = f.lower; map[f.period].upper = f.upper; });\r\n    const periods = Object.keys(map).sort();\r\n    periods.forEach(p => {\r\n      const row = map[p] || {};\r\n      rows.push([\r\n        p,\r\n        (row.actual !== undefined ? row.actual : ''),\r\n        (row.predicted !== undefined ? row.predicted : ''),\r\n        (row.lower !== undefined ? row.lower : ''),\r\n        (row.upper !== undefined ? row.upper : ''),\r\n      ].join(','));\r\n    });\r\n\r\n    const csvContent = rows.join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', 'forecast.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const [exporting, setExporting] = useState(false);\r\n  const [computingBootstrap, setComputingBootstrap] = useState(false);\r\n  const asyncForecastRef = useRef(null); // holds latest async forecast promise (with revoke)\r\n  const prevForecastInputKeyRef = useRef(null);\r\n  // Dev diagnostic flag: set localStorage.setItem('JARVIS_DEV_DIAG','1') to enable lightweight logs\r\n  const devDiag = typeof window !== 'undefined' && !!localStorage.getItem('JARVIS_DEV_DIAG');\r\n  // const bootstrapWorkerRef = useRef(null); // reserved for cancellation if needed\r\n  // Linear regression on index -> value (sync + async bootstrap support)\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    // Build a compact, stable input key using a streaming FNV-1a hash so we avoid\r\n    // allocating a giant string for large datasets. We update the hash with\r\n    // small chunks (settings and each row) to produce a deterministic key.\r\n    const fnv1aInit = () => 2166136261 >>> 0;\r\n    const fnv1aUpdate = (h, str) => {\r\n      for (let i = 0; i < str.length; i++) {\r\n        h ^= str.charCodeAt(i);\r\n        h = Math.imul(h, 16777619) >>> 0;\r\n      }\r\n      return h;\r\n    };\r\n    const fnv1aDigest = (h) => (h >>> 0).toString(16);\r\n\r\n    let h = fnv1aInit();\r\n    // Add the config/settings\r\n    h = fnv1aUpdate(h, String(method));\r\n    h = fnv1aUpdate(h, '|');\r\n    h = fnv1aUpdate(h, String(monthsOut));\r\n    h = fnv1aUpdate(h, '|');\r\n    h = fnv1aUpdate(h, String(holtAlpha));\r\n    h = fnv1aUpdate(h, '|');\r\n    h = fnv1aUpdate(h, String(holtBeta));\r\n    h = fnv1aUpdate(h, '|');\r\n    h = fnv1aUpdate(h, holtBootstrap ? 'b' : 'n');\r\n    h = fnv1aUpdate(h, '|');\r\n    h = fnv1aUpdate(h, String(holtBootstrapSamples));\r\n    h = fnv1aUpdate(h, '|');\r\n    h = fnv1aUpdate(h, holtBootstrapAsync ? 'a' : 's');\r\n    h = fnv1aUpdate(h, '|');\r\n\r\n    // Stream the row data from monthlySeries (preferred) or fallback to records\r\n    if (monthlySeries && monthlySeries.length) {\r\n      h = fnv1aUpdate(h, String(monthlySeries.length));\r\n      for (let i = 0; i < monthlySeries.length; i++) {\r\n        const ms = monthlySeries[i];\r\n        // include period and numeric total as small updates\r\n        h = fnv1aUpdate(h, '|');\r\n        h = fnv1aUpdate(h, String(ms.period));\r\n        h = fnv1aUpdate(h, ':');\r\n        h = fnv1aUpdate(h, String(ms.total));\r\n      }\r\n    } else if (records && records.length) {\r\n      h = fnv1aUpdate(h, String(records.length));\r\n      for (let i = 0; i < records.length; i++) {\r\n        const r = records[i];\r\n        const period = r.period || r.date || '';\r\n        const val = r.total || r.MRR || '';\r\n        h = fnv1aUpdate(h, '|');\r\n        h = fnv1aUpdate(h, String(period));\r\n        h = fnv1aUpdate(h, ':');\r\n        h = fnv1aUpdate(h, String(val));\r\n      }\r\n    } else {\r\n      h = fnv1aUpdate(h, '0');\r\n    }\r\n\r\n    const inputKey = fnv1aDigest(h);\r\n\r\n    // If inputs haven't changed, skip recomputing\r\n    if (prevForecastInputKeyRef.current === inputKey) {\r\n      if (devDiag) console.debug('[jarvis] forecast effect skipped (inputKey unchanged)', inputKey);\r\n      return () => { cancelled = true; };\r\n    }\r\n    prevForecastInputKeyRef.current = inputKey;\r\n\r\n    if (devDiag) console.debug('[jarvis] forecast effect running, inputKey=', inputKey, { method, monthsOut, holtAlpha, holtBeta, holtBootstrap, holtBootstrapSamples, holtBootstrapAsync });\r\n\r\n    setComputingBootstrap(true);\r\n\r\n    // Use computeForecastFromRecords helper — it will aggregate monthly series and run forecast\r\n    try {\r\n      const maybe = computeForecastFromRecords(records && records.length ? records : (monthlySeries && monthlySeries.length ? monthlySeries.map(ms => ({ period: ms.period, total: ms.total })) : []), { method: method === 'holt' ? 'holt' : 'linear', monthsOut, holtOptions: { alpha: holtAlpha, beta: holtBeta, bootstrap: holtBootstrap, bootstrapSamples: holtBootstrapSamples, bootstrapAsync: holtBootstrapAsync } });\r\n      // The helper may return a Promise (if holt with async bootstrap), or an object\r\n      if (maybe && typeof maybe.then === 'function') {\r\n        asyncForecastRef.current = maybe;\r\n        maybe.then((res) => {\r\n          asyncForecastRef.current = null;\r\n          if (cancelled) return;\r\n          // res is the full object { monthlySeries, forecastResult }\r\n          setForecastResultState(res.forecastResult || res);\r\n        }).catch((err) => {\r\n          asyncForecastRef.current = null;\r\n          console.error('Async forecast failed', err);\r\n          // use refs to stable toast functions\r\n          try { (showToastRef.current || showCustomModalRef.current)('Async forecast failed. See console for details.', 'error'); } catch (e) {}\r\n        }).finally(() => { if (!cancelled) setComputingBootstrap(false); });\r\n      } else {\r\n        // synchronous result\r\n        const res = maybe || {};\r\n        setForecastResultState(res.forecastResult || res);\r\n        setComputingBootstrap(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Forecast compute failed', err);\r\n      try { (showToastRef.current || showCustomModalRef.current)('Forecast compute failed. See console for details.', 'error'); } catch (e) {}\r\n      setComputingBootstrap(false);\r\n    }\r\n\r\n    return () => { cancelled = true; };\r\n  // note: showToast/showCustomModal use refs above so they are omitted from deps to avoid identity churn\r\n  }, [records, monthlySeries, method, monthsOut, holtAlpha, holtBeta, holtBootstrap, holtBootstrapSamples, holtBootstrapAsync]);\r\n\r\n  // Render the forecast chart UI\r\n  return (\r\n    <div className=\"p-4 md:p-8\">\r\n  <h2 className=\"text-3xl font-bold text-gray-900 mb-6 border-b pb-2\">Forecasting & Trend Analysis</h2>\r\n      <div className=\"p-6 bg-white rounded-xl shadow-xl border border-gray-200\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <p className=\"text-gray-600\">Showing historical Actual monthly MRR and a simple linear projection with a 95% CI band.</p>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <label className=\"text-sm text-gray-600\">Months to forecast:</label>\r\n            <input aria-label=\"Months to forecast\" type=\"number\" min=\"1\" max=\"36\" value={monthsOut} onChange={(e) => setMonthsOut(Number(e.target.value || 1))} className=\"w-20 p-1 rounded border\" />\r\n            <label className=\"text-sm text-gray-600\">Method:</label>\r\n            <select aria-label=\"Forecast method\" value={method} onChange={(e) => setMethod(e.target.value)} className=\"p-1 rounded border bg-white\">\r\n              <option value=\"linear\">Linear OLS</option>\r\n              <option value=\"holt\">Holt Linear</option>\r\n            </select>\r\n            {/* If Holt is selected, show alpha/beta controls */}\r\n            {method === 'holt' && (\r\n              <div className=\"flex items-center space-x-2\">\r\n                <label className=\"text-sm text-gray-600\">α</label>\r\n                <input type=\"range\" min=\"0.01\" max=\"1\" step=\"0.01\" value={holtAlpha} onChange={(e) => { const v = Number(e.target.value); setHoltAlpha(v); localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: v, beta: holtBeta })); }} />\r\n                <label className=\"text-sm text-gray-600\">β</label>\r\n                <input type=\"range\" min=\"0.01\" max=\"1\" step=\"0.01\" value={holtBeta} onChange={(e) => { const v = Number(e.target.value); setHoltBeta(v); localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: holtAlpha, beta: v })); }} />\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button type=\"button\" disabled={tuning} className=\"px-3 py-1 bg-indigo-600 text-white rounded text-sm\" onClick={async () => {\r\n                    try {\r\n                      if (!series || series.length < 3) { (showToast || showCustomModal)('Not enough data to auto-tune (min 3 months).', 'warn'); return; }\r\n                      (showToast || showCustomModal)('Running Holt auto-tune (fast search)...', 'info');\r\n                      setTuning(true);\r\n                      // run tuner (synchronous but quick)\r\n                      const res = holtAutoTune(series, { alpha: holtAlpha, beta: holtBeta });\r\n                      setHoltAlpha(res.alpha);\r\n                      setHoltBeta(res.beta);\r\n                      localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: res.alpha, beta: res.beta, bootstrap: holtBootstrap, bootstrapSamples: holtBootstrapSamples, bootstrapAsync: holtBootstrapAsync }));\r\n                      (showToast || showCustomModal)(`Auto-tune completed — α=${res.alpha.toFixed(2)}, β=${res.beta.toFixed(2)}, MSE=${res.mse.toFixed(1)}`, 'success');\r\n                    } catch (err) {\r\n                      console.error('Auto-tune failed', err);\r\n                      (showToast || showCustomModal)('Auto-tune failed. See console for details.', 'error');\r\n                    } finally { setTuning(false); }\r\n                  }}>Auto-tune</button>\r\n\r\n                  <button type=\"button\" disabled={tuning} className=\"px-3 py-1 bg-violet-600 text-white rounded text-sm\" onClick={async () => {\r\n                    try {\r\n                      if (!series || series.length < 3) { (showToast || showCustomModal)('Not enough data to auto-tune (min 3 months).', 'warn'); return; }\r\n                      (showToast || showCustomModal)('Running Advanced Auto-tune (Nelder-Mead)...', 'info');\r\n                      setTuning(true);\r\n                      const res = await new Promise((resovle) => {\r\n                        // run advanced tuner (may take longer)\r\n                        const out = holtAutoTuneAdvanced(series, { alpha: holtAlpha, beta: holtBeta, maxIter: 300 });\r\n                        resovle(out);\r\n                      });\r\n                      setHoltAlpha(res.alpha);\r\n                      setHoltBeta(res.beta);\r\n                      localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: res.alpha, beta: res.beta, bootstrap: holtBootstrap, bootstrapSamples: holtBootstrapSamples, bootstrapAsync: holtBootstrapAsync }));\r\n                      (showToast || showCustomModal)(`Advanced Auto-tune completed — α=${res.alpha.toFixed(3)}, β=${res.beta.toFixed(3)}, MSE=${res.mse.toFixed(2)}`, 'success');\r\n                    } catch (err) {\r\n                      console.error('Advanced Auto-tune failed', err);\r\n                      (showToast || showCustomModal)('Advanced Auto-tune failed. See console for details.', 'error');\r\n                    } finally { setTuning(false); }\r\n                  }}>Auto-tune (advanced)</button>\r\n                </div>\r\n                <label className=\"text-sm text-gray-600\">Bootstrap CI</label>\r\n                <input type=\"checkbox\" checked={holtBootstrap} onChange={(e) => { const v = !!e.target.checked; setHoltBootstrap(v); localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: holtAlpha, beta: holtBeta, bootstrap: v, bootstrapSamples: holtBootstrapSamples, bootstrapAsync: holtBootstrapAsync })); }} />\r\n                <label className=\"text-sm text-gray-600\">Async Bootstrap</label>\r\n                <input type=\"checkbox\" checked={holtBootstrapAsync} onChange={(e) => { const v = !!e.target.checked; setHoltBootstrapAsync(v); localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: holtAlpha, beta: holtBeta, bootstrap: holtBootstrap, bootstrapSamples: holtBootstrapSamples, bootstrapAsync: v })); }} />\r\n                {holtBootstrap && (\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <label className=\"text-sm text-gray-600\">Samples</label>\r\n                    <input type=\"number\" min=\"50\" max=\"2000\" step=\"10\" value={holtBootstrapSamples} onChange={(e) => { const v = Math.max(50, Number(e.target.value || 200)); setHoltBootstrapSamples(v); localStorage.setItem(HOLTPREF, JSON.stringify({ alpha: holtAlpha, beta: holtBeta, bootstrap: holtBootstrap, bootstrapSamples: v })); }} className=\"w-20 p-1 rounded border\" />\r\n                    {computingBootstrap && (\r\n                      <span className=\"text-sm text-gray-500 ml-2\">Computing CI...</span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            <button type=\"button\" aria-label=\"Download forecast CSV\" className=\"px-3 py-1 bg-green-500 text-white rounded text-sm\" onClick={downloadCSV}>Download CSV</button>\r\n            <button type=\"button\" aria-label=\"Download forecast image\" disabled={exporting || !(chartRef && chartRef.current)} aria-disabled={exporting || !(chartRef && chartRef.current)} className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm\" onClick={async () => {\r\n              const container = chartRef && chartRef.current ? chartRef.current : null;\r\n              if (!container) { (showToast || showCustomModal)('No chart available to export.', 'error'); return; }\r\n              setExporting(true);\r\n              try {\r\n                const ok = await exportElementToPng(container, 'forecast_chart.png', 2);\r\n                if (ok) (showToast || showCustomModal)('Chart image downloaded.', 'success'); else (showToast || showCustomModal)('Failed to export chart image.', 'error');\r\n              } finally { setExporting(false); }\r\n            }}>{exporting ? 'Exporting...' : 'Download Image'}</button>\r\n            <button type=\"button\" aria-label=\"Copy forecast image to clipboard\" disabled={exporting || !(chartRef && chartRef.current)} aria-disabled={exporting || !(chartRef && chartRef.current)} className=\"px-3 py-1 bg-gray-500 text-white rounded text-sm\" onClick={async () => {\r\n              const container = chartRef && chartRef.current ? chartRef.current : null;\r\n              if (!container) { (showToast || showCustomModal)('No chart available to copy.', 'error'); return; }\r\n              setExporting(true);\r\n              try {\r\n                const ok = await copyElementToClipboard(container, 2);\r\n                if (ok) (showToast || showCustomModal)('Chart image copied to clipboard.', 'success'); else (showToast || showCustomModal)('Failed to copy chart to clipboard. Your browser may block clipboard image writes.', 'error');\r\n              } finally { setExporting(false); }\r\n            }}>{exporting ? 'Exporting...' : 'Copy Image'}</button>\r\n            {computingBootstrap && (\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"text-sm text-gray-500\">Computing CI...</div>\r\n                <button type=\"button\" aria-label=\"Cancel CI\" className=\"px-3 py-1 bg-red-500 text-white rounded text-sm\" onClick={() => {\r\n                  try {\r\n                    if (asyncForecastRef.current && typeof asyncForecastRef.current.revoke === 'function') asyncForecastRef.current.revoke();\r\n                  } catch (e) { console.error('Cancel revoke failed', e); }\r\n                  asyncForecastRef.current = null;\r\n                  setComputingBootstrap(false);\r\n                  // keep last known forecast displayed — avoid calling setState with same value\r\n                  (showToast || showCustomModal)('Bootstrap CI cancelled.', 'info');\r\n                }}>Cancel CI</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div ref={chartRef} className=\"mt-4 h-64\">\r\n          {combined.length === 0 ? (\r\n            <div className=\"h-56 bg-gray-50 border border-dashed border-gray-300 rounded-lg flex items-center justify-center text-gray-400\">No monthly series data — load a dataset with a date and MRR column in the Data Dashboard.</div>\r\n          ) : (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={combined} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"period\" />\r\n                <YAxis />\r\n                <ReTooltip formatter={(value) => typeof value === 'number' ? formatCurrency(value) : value} />\r\n                <Legend />\r\n                <Area type=\"monotone\" dataKey=\"upper\" stroke=\"none\" fill=\"#BFDBFE\" fillOpacity={0.4} isAnimationActive={false} />\r\n                <Area type=\"monotone\" dataKey=\"lower\" stroke=\"none\" fill=\"#BFDBFE\" fillOpacity={0.4} isAnimationActive={false} />\r\n                <Line type=\"monotone\" dataKey=\"actual\" stroke=\"#10B981\" strokeWidth={2} dot={{ r: 3 }} />\r\n                <Line type=\"monotone\" dataKey=\"predicted\" stroke=\"#1D4ED8\" strokeWidth={2} dot={{ r: 3 }} strokeDasharray=\"6 4\" />\r\n                <Brush dataKey=\"period\" height={30} stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          )}\r\n        </div>\r\n        {/* Explainability panel: shows chosen model and parameters in friendly text */}\r\n        <div className=\"mt-4 p-3 bg-gray-50 border border-dashed rounded text-sm text-gray-700\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div>\r\n              <strong>Model:</strong> {method === 'holt' ? 'Holt Linear (double exponential smoothing)' : 'Linear regression (OLS)'}\r\n              <div className=\"text-xs text-gray-600 mt-1\">{method === 'holt' ? `α=${holtAlpha.toFixed(2)}, β=${holtBeta.toFixed(2)}${holtBootstrap ? `, bootstrap=${holtBootstrapSamples} samples${holtBootstrapAsync ? ' (async)' : ''}` : ''}` : `Slope projection over historical period`}</div>\r\n            </div>\r\n            <div className=\"text-right text-xs text-gray-500\">\r\n              <div>{series.length} months of history</div>\r\n              <div>{monthsOut} months forecast</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-2 text-xs text-gray-500\">Tip: use Auto-tune for Holt when you have at least 6 months of history. Bootstrap CIs estimate uncertainty — enable async mode for large sample counts.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component 4: What-If Simulation\r\nconst WhatIfSimulation = ({ enhancedCustomers, showCustomModal, chartRef, showToast = null }) => {\r\n    const [whatIfData, setWhatIfData] = useState({\r\n        discountEffect: 0.1, // Expected churn rate reduction from discount\r\n        supportEffect: 0.05, // Expected churn rate reduction from proactive support\r\n        campaignEffect: 0.15, // Expected churn rate reduction from re-engagement campaign\r\n        selectedRiskLevel: 'High',\r\n      });\r\n\r\n      // Scenario persistence (localStorage)\r\n      const STORAGE_KEY = 'jarvis_saved_scenarios_v1';\r\n      const [savedScenarios, setSavedScenarios] = useState([]);\r\n      const [scenarioName, setScenarioName] = useState('');\r\n      const [selectedScenarioId, setSelectedScenarioId] = useState(null);\r\n\r\n      // On mount, load any previously saved scenarios from localStorage\r\n      useEffect(() => {\r\n        try {\r\n          const raw = localStorage.getItem(STORAGE_KEY);\r\n          if (raw) setSavedScenarios(JSON.parse(raw));\r\n        } catch (e) {\r\n          // ignore parse errors\r\n        }\r\n        // Also attempt to fetch server-saved dashboards and merge when authenticated\r\n        (async () => {\r\n          try {\r\n            const meUser = await auth.me();\r\n            if (!meUser) return;\r\n            const resp = await auth.apiFetch('/api/dashboards/', { method: 'GET' });\r\n            if (!resp || !resp.ok) return;\r\n            const list = await resp.json().catch(() => null);\r\n            if (!Array.isArray(list)) return;\r\n            // Map server dashboards into local scenario shape if possible\r\n            const mapped = list.map(d => ({ id: `srv-${d.id}`, serverId: d.id, name: d.name || `Server Dashboard ${d.id}`, createdAt: d.created_at || d.createdAt || new Date().toISOString(), data: (d.config && d.config.data) || {} }));\r\n            // Merge server-saved dashboards before local ones (server-first)\r\n            setSavedScenarios(prev => {\r\n              // dedupe by serverId or id\r\n              const seen = new Set();\r\n              const combined = (mapped.concat(prev || [])).filter(s => {\r\n                const key = s.serverId ? `srv-${s.serverId}` : s.id;\r\n                if (seen.has(key)) return false; seen.add(key); return true;\r\n              }).slice(0,50);\r\n              try { localStorage.setItem(STORAGE_KEY, JSON.stringify(combined)); } catch (e) {}\r\n              return combined;\r\n            });\r\n          } catch (e) {\r\n            // ignore fetch errors (e.g., not authenticated or offline)\r\n          }\r\n        })();\r\n      }, []);\r\n\r\n      const persistScenarios = (list) => {\r\n        try { localStorage.setItem(STORAGE_KEY, JSON.stringify(list)); } catch (e) { /* ignore */ }\r\n      };\r\n\r\n      const saveScenario = () => {\r\n        const name = scenarioName && scenarioName.trim() ? scenarioName.trim() : `Scenario ${new Date().toLocaleString()}`;\r\n        const id = Date.now().toString();\r\n        const payload = { id, name, createdAt: new Date().toISOString(), data: whatIfData };\r\n        const next = [payload].concat(savedScenarios).slice(0, 50); // keep recent 50\r\n        // if authenticated, persist to server as a Dashboard\r\n        (async () => {\r\n          try {\r\n            const meUser = await auth.me();\r\n            if (meUser) {\r\n              const payloadToServer = { name, config: { data: whatIfData } };\r\n              try {\r\n                const resp = await auth.apiFetch('/api/dashboards/', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payloadToServer) });\r\n                if (resp.ok) {\r\n                  const body = await resp.json().catch(() => null);\r\n                  if (body && body.id) {\r\n                    const merged = [{ ...payloadToServer, serverId: body.id, id }].concat(savedScenarios).slice(0,50);\r\n                    setSavedScenarios(merged);\r\n                    persistScenarios(merged);\r\n                  }\r\n                  (showToast || showCustomModal)(`Saved scenario \"${name}\" to server.`, 'success');\r\n                  return;\r\n                }\r\n                console.warn('Server save failed', resp.status);\r\n              } catch (e) {\r\n                console.error('Server save error', e);\r\n              }\r\n            }\r\n            // fallback local\r\n            setSavedScenarios(next);\r\n            persistScenarios(next);\r\n            (showToast || showCustomModal)(`Saved scenario \"${name}\"`, 'success');\r\n          } catch (e) {\r\n            console.error('Save scenario failed', e);\r\n            setSavedScenarios(next);\r\n            persistScenarios(next);\r\n            (showToast || showCustomModal)(`Saved scenario \"${name}\"`, 'success');\r\n          }\r\n        })();\r\n\r\n        setScenarioName('');\r\n        setSelectedScenarioId(id);\r\n      };\r\n\r\n      // Autosave current draft to localStorage on every change so users can restore later\r\n      useEffect(() => {\r\n        try {\r\n          const draftKey = 'jarvis_autosave_whatif_v1';\r\n          localStorage.setItem(draftKey, JSON.stringify(whatIfData));\r\n        } catch (e) { /* ignore write errors (storage full) */ }\r\n      }, [whatIfData]);\r\n\r\n      // Export current target customers for the selected risk level as CSV\r\n      const exportScenarioCsv = () => {\r\n        const headers = ['id','name','MRR','riskScore','riskLevel','supportTickets','lastActivityDays'];\r\n        const rows = [headers.join(',')];\r\n        const { selectedRiskLevel } = whatIfData;\r\n        const target = enhancedCustomers.filter(c => selectedRiskLevel === 'All' || c.riskLevel === selectedRiskLevel);\r\n        target.forEach(c => {\r\n          rows.push([c.id, c.name || '', c.MRR || 0, c.riskScore || 0, c.riskLevel || '', c.supportTickets || 0, c.lastActivityDays || 0].map(v => `\"${String(v).replace(/\"/g,'\"\"')}\"`).join(','));\r\n        });\r\n        const blob = new Blob([rows.join('\\n')], { type: 'text/csv' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url; a.download = 'scenario_customers.csv'; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);\r\n        (showToast || showCustomModal)(`Exported ${target.length} customer rows.`, 'success');\r\n      };\r\n\r\n      // Generate a short local summary string for the current scenario\r\n      const [scenarioSummary, setScenarioSummary] = useState('');\r\n      const generateSummary = () => {\r\n        const s = generateScenarioSummary(simulationResults, whatIfData);\r\n        setScenarioSummary(s);\r\n      };\r\n\r\n      const loadScenario = (s) => {\r\n        if (!s || !s.data) return;\r\n        setWhatIfData(s.data);\r\n        setSelectedScenarioId(s.id);\r\n        (showToast || showCustomModal)(`Loaded scenario \"${s.name}\"`, 'info');\r\n      };\r\n\r\n      const deleteScenario = (id) => {\r\n        const next = savedScenarios.filter(s => s.id !== id);\r\n        setSavedScenarios(next);\r\n        persistScenarios(next);\r\n        if (selectedScenarioId === id) setSelectedScenarioId(null);\r\n      };\r\n\r\n      // Simulation Logic (Memoized calculation for performance)\r\n      const simulationResults = useMemo(() => {\r\n        const { discountEffect, supportEffect, campaignEffect, selectedRiskLevel } = whatIfData;\r\n    \r\n        if (enhancedCustomers.length === 0) {\r\n            return { currentTotalMRR: 0, potentialMRRLoss: 0, simulatedMRRLoss: 0, projectedMRRSaved: 0, targetCustomerCount: 0 };\r\n        }\r\n\r\n        // Filter customers based on the simulation target risk level\r\n        const targetCustomers = enhancedCustomers.filter(c => \r\n            selectedRiskLevel === 'All' || c.riskLevel === selectedRiskLevel\r\n        );\r\n    \r\n        const currentTotalMRR = enhancedCustomers.reduce((sum, c) => sum + (c.MRR || 0), 0);\r\n    \r\n        // 1. Baseline calculation (What we expect to lose without intervention among target customers)\r\n        const potentialMRRLoss = targetCustomers.reduce((loss, c) => {\r\n          const estimatedChurnRate = c.riskScore / 100;\r\n          return loss + (c.MRR * estimatedChurnRate);\r\n        }, 0);\r\n    \r\n        // 2. Simulated calculation (applying mitigation effects to reduce the rate)\r\n        const simulatedMRRLoss = targetCustomers.reduce((loss, c) => {\r\n          const estimatedChurnRate = c.riskScore / 100;\r\n          let reduction = 0;\r\n          \r\n          // Apply reduction based on customer characteristics and strategy effectiveness\r\n          if (c.MRR > 500) reduction += discountEffect;\r\n          if (c.supportTickets > 3) reduction += supportEffect;\r\n          if (c.lastActivityDays > 14) reduction += campaignEffect;\r\n          \r\n          reduction = Math.min(reduction, 0.95);\r\n    \r\n          // Calculate the new, reduced churn rate\r\n          const newChurnRate = estimatedChurnRate * (1 - reduction);\r\n          return loss + (c.MRR * newChurnRate);\r\n        }, 0);\r\n    \r\n        const projectedMRRSaved = potentialMRRLoss - simulatedMRRLoss;\r\n    \r\n        return {\r\n          currentTotalMRR,\r\n          potentialMRRLoss,\r\n          simulatedMRRLoss,\r\n          projectedMRRSaved,\r\n          targetCustomerCount: targetCustomers.length\r\n        };\r\n      }, [enhancedCustomers, whatIfData]);\r\n\r\n\r\n      const ResultBox = ({ title, value, color, isLarge = false }) => {\r\n        const colorClasses = {\r\n          red: 'bg-red-50 text-red-700 border-red-300',\r\n          green: 'bg-green-50 text-green-700 border-green-300',\r\n          blue: 'bg-blue-50 text-blue-700 border-blue-300',\r\n          orange: 'bg-yellow-50 text-yellow-700 border-yellow-300',\r\n        };\r\n        return (\r\n          <div className={`p-4 rounded-xl border ${colorClasses[color]} ${isLarge ? 'col-span-1 sm:col-span-2' : ''}`}>\r\n            <p className={`text-sm font-medium ${isLarge ? 'text-lg' : ''}`}>{title}</p>\r\n            <p className={`text-3xl font-extrabold ${isLarge ? 'text-5xl my-2' : 'mt-1'}`}>{value}</p>\r\n          </div>\r\n        );\r\n      };\r\n\r\n  return (\r\n    <div className=\"p-4 md:p-8\" ref={chartRef}>\r\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-6 border-b pb-2\">Scenario Modeling: MRR Retention</h2>\r\n          \r\n          {enhancedCustomers.length === 0 ? (\r\n            <NoDataMessage />\r\n          ) : (\r\n            <div className=\"bg-white p-6 shadow-xl rounded-xl border border-blue-100 mb-8\">\r\n              <h3 className=\"text-xl font-extrabold text-blue-800 mb-4 flex items-center\">\r\n                <svg className=\"w-6 h-6 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"></path></svg>\r\n                Forecasted MRR Savings\r\n              </h3>\r\n              <p className=\"text-gray-600 mb-4\">Simulate the impact of retention strategies by adjusting their estimated effectiveness on high-risk customers.</p>\r\n        \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Target Risk Level</label>\r\n                  <select\r\n                    aria-label=\"Target risk level selector\"\r\n                    value={whatIfData.selectedRiskLevel}\r\n                    onChange={(e) => setWhatIfData({ ...whatIfData, selectedRiskLevel: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-lg border-gray-300 shadow-sm p-2 bg-gray-50 focus:ring-blue-500 focus:border-blue-500 transition\"\r\n                  >\r\n                    <option value=\"All\">All Customers</option>\r\n                    <option value=\"High\">High Risk Only (Score &ge; 70)</option>\r\n                    <option value=\"Medium\">Medium Risk Only (Score 40-69)</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Saved Scenarios</label>\r\n                  <div className=\"mt-1 flex space-x-2\">\r\n                    <input aria-label=\"Scenario name\" value={scenarioName} onChange={(e) => setScenarioName(e.target.value)} placeholder=\"Name scenario (optional)\" className=\"flex-1 p-2 rounded border bg-white\" />\r\n                        <button aria-label=\"Save scenario\" onClick={saveScenario} className=\"px-3 py-1 bg-indigo-600 text-white rounded text-sm\">Save</button>\r\n                        <button aria-label=\"Export scenario CSV\" onClick={exportScenarioCsv} className=\"px-3 py-1 bg-green-500 text-white rounded text-sm\">Export CSV</button>\r\n                        <button aria-label=\"Generate summary\" onClick={generateSummary} className=\"px-3 py-1 bg-gray-500 text-white rounded text-sm\">Summary</button>\r\n                  </div>\r\n                  <div className=\"mt-2 max-h-40 overflow-auto border rounded bg-gray-50 p-2\">\r\n                    {savedScenarios.length === 0 ? (\r\n                      <div className=\"text-xs text-gray-500\">No saved scenarios</div>\r\n                    ) : (\r\n                      (() => {\r\n                        // build refs for the list\r\n                        const itemRefs = savedScenarios.map(() => React.createRef());\r\n                        return savedScenarios.map((s, idx) => {\r\n                          const ref = itemRefs[idx];\r\n                          const onKey = (e) => {\r\n                            if (e.key === 'ArrowDown') { e.preventDefault(); const next = itemRefs[idx+1] || itemRefs[0]; next && next.current && next.current.focus(); }\r\n                            if (e.key === 'ArrowUp') { e.preventDefault(); const prev = itemRefs[idx-1] || itemRefs[itemRefs.length-1]; prev && prev.current && prev.current.focus(); }\r\n                            if (e.key === 'Home') { e.preventDefault(); itemRefs[0] && itemRefs[0].current && itemRefs[0].current.focus(); }\r\n                            if (e.key === 'End') { e.preventDefault(); itemRefs[itemRefs.length-1] && itemRefs[itemRefs.length-1].current && itemRefs[itemRefs.length-1].current.focus(); }\r\n                            if (e.key === 'Enter') { e.preventDefault(); loadScenario(s); }\r\n                          };\r\n\r\n                          return (\r\n                            <div key={s.id} className={`flex items-center justify-between p-1 rounded ${selectedScenarioId === s.id ? 'bg-indigo-50 border border-indigo-100' : ''}`}>\r\n                    <button ref={ref} tabIndex={0} onKeyDown={onKey} aria-label={`Load scenario ${s.name}`} onClick={() => loadScenario(s)} className=\"text-left text-sm text-gray-800 truncate focus:outline-none focus:ring-2 focus:ring-indigo-500\">{s.name}</button>\r\n                              <div className=\"flex items-center space-x-2\">\r\n                                <button aria-label={`Load scenario ${s.name}`} title=\"Load\" onClick={() => loadScenario(s)} className=\"px-2 py-0.5 bg-green-100 text-green-700 rounded text-xs\">Load</button>\r\n            <div className=\"mt-3 flex items-center space-x-2\">\r\n              <button aria-label=\"Export scenario JSON\" onClick={() => {\r\n                const payload = { meta: { generatedAt: new Date().toISOString(), name: scenarioName || null }, data: whatIfData, results: simulationResults };\r\n                const blob = new Blob([JSON.stringify(payload, null, 2)], { type: 'application/json' });\r\n                const url = URL.createObjectURL(blob);\r\n                const a = document.createElement('a'); a.href = url; a.download = 'scenario.json'; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);\r\n                (showToast || showCustomModal)('Scenario JSON exported.', 'success');\r\n              }} className=\"px-3 py-1 bg-gray-700 text-white rounded text-sm\">Export JSON</button>\r\n\r\n              <label className=\"px-3 py-1 bg-gray-100 rounded text-sm cursor-pointer\">\r\n                Import JSON\r\n                <input type=\"file\" accept=\"application/json\" onChange={(e) => {\r\n                  const f = e.target.files && e.target.files[0]; if (!f) return;\r\n                  const r = new FileReader(); r.onload = (ev) => {\r\n                    try {\r\n                      const obj = JSON.parse(ev.target.result);\r\n                      if (obj && obj.data) { setWhatIfData(obj.data); (showToast || showCustomModal)('Imported scenario JSON.', 'success'); }\r\n                    } catch (err) { (showToast || showCustomModal)('Failed to import JSON.', 'error'); }\r\n                  }; r.readAsText(f);\r\n                }} style={{ display: 'none' }} />\r\n              </label>\r\n\r\n              <button aria-label=\"Restore autosaved draft\" onClick={() => {\r\n                try {\r\n                  const draftKey = 'jarvis_autosave_whatif_v1';\r\n                  const raw = localStorage.getItem(draftKey);\r\n                  if (!raw) { (showToast || showCustomModal)('No autosave draft found.', 'warn'); return; }\r\n                  const d = JSON.parse(raw);\r\n                  setWhatIfData(d);\r\n                  (showToast || showCustomModal)('Restored autosaved draft.', 'success');\r\n                } catch (e) { (showToast || showCustomModal)('Failed to restore draft.', 'error'); }\r\n              }} className=\"px-3 py-1 bg-yellow-500 text-white rounded text-sm\">Restore Draft</button>\r\n            </div>\r\n                                <button aria-label={`Delete scenario ${s.name}`} title=\"Delete\" onClick={() => deleteScenario(s.id)} className=\"px-2 py-0.5 bg-red-100 text-red-700 rounded text-xs\">Delete</button>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        });\r\n                      })()\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        \r\n              <div className=\"space-y-4\">\r\n                <label className=\"block text-lg font-semibold text-blue-700 pt-2 border-t mt-4\">Retention Strategy Effectiveness (Expected Churn Rate Reduction)</label>\r\n        \r\n                {['Discount Offer', 'Proactive Support', 'Re-engagement Campaign'].map((label, index) => {\r\n                  const key = index === 0 ? 'discountEffect' : index === 1 ? 'supportEffect' : 'campaignEffect';\r\n                  const effect = whatIfData[key];\r\n                  return (\r\n                    <div key={key}>\r\n                      <label className=\"text-sm font-medium text-gray-700 flex justify-between\">\r\n                        <span>{label}</span>\r\n                        <span className=\"font-mono text-blue-600\">{Math.round(effect * 100)}%</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"0.3\" \r\n                        step=\"0.01\"\r\n                        value={effect}\r\n                        aria-label={`${label} effectiveness`}\r\n                        onChange={(e) => setWhatIfData({ ...whatIfData, [key]: parseFloat(e.target.value) })}\r\n                        className=\"w-full h-2 bg-blue-100 rounded-lg appearance-none cursor-pointer range-lg focus:outline-none focus:ring-2 focus:ring-500 mt-1\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n        \r\n              <div className=\"mt-6 border-t border-blue-200 pt-4\">\r\n                <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Simulation Impact:</h4>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 text-center\">\r\n                  <ResultBox title=\"Potential Loss (No Action)\" value={formatCurrency(simulationResults.potentialMRRLoss)} color=\"red\" />\r\n                  <ResultBox title=\"Projected Loss (With Actions)\" value={formatCurrency(simulationResults.simulatedMRRLoss)} color=\"orange\" />\r\n                  <ResultBox title=\"MRR Projected Saved\" value={formatCurrency(simulationResults.projectedMRRSaved)} color=\"green\" isLarge={true} />\r\n                  <ResultBox title=\"Total Current MRR\" value={formatCurrency(simulationResults.currentTotalMRR)} color=\"blue\" />\r\n                </div>\r\n                <p className=\"text-xs text-gray-500 mt-3 text-right\">Targeting {simulationResults.targetCustomerCount} customer(s).</p>\r\n                {scenarioSummary && (\r\n                  <div className=\"mt-4 p-3 bg-gray-50 rounded border text-sm text-gray-700\">{scenarioSummary}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// Component 5: Churn Predictor (High-Risk Tracker)\r\nconst ChurnPredictor = ({ enhancedCustomers, handleContactCustomer, seedInitialData, computeChurnWhenMissing, setComputeChurnWhenMissing }) => {\r\n\r\n    const CustomerTable = ({ customers, onContact, seedInitialData }) => (\r\n        <div className=\"bg-white p-6 shadow-xl rounded-xl border border-red-100\">\r\n          <h3 className=\"text-xl font-extrabold text-red-800 mb-4 flex items-center\">\r\n            <svg className=\"w-6 h-6 mr-2 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path></svg>\r\n            High-Risk Customers & Contact Tracker\r\n          </h3>\r\n          {customers.length === 0 ? (\r\n            <div className=\"text-center py-8 text-gray-500\">\r\n                No customer data loaded. Please use the **Data Dashboard** to load or seed initial data.\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MRR</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Risk Score</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Activity (Days)</th>\r\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {/* Filter for High and Medium Risk for the tracker, ignoring Low Risk */}\r\n                  {customers.filter(c => c.riskLevel !== 'Low').map((c) => {\r\n                    const isHighRisk = c.riskLevel === 'High';\r\n                    const rowClass = isHighRisk ? 'bg-red-50 hover:bg-red-100 transition' : 'bg-yellow-50 hover:bg-yellow-100 transition';\r\n    \r\n                    return (\r\n                      <tr key={c.id} className={rowClass}>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          {c.name}\r\n                          <span className={`ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${c.riskLevel === 'High' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`}>\r\n                            {c.riskLevel}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatCurrency(c.MRR)}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          <div className=\"w-20 bg-gray-200 rounded-full h-2.5\">\r\n                            <div\r\n                              className={`h-2.5 rounded-full ${c.riskLevel === 'High' ? 'bg-red-600' : 'bg-yellow-500'}`}\r\n                              style={{ width: `${c.riskScore.toFixed(0)}%` }}\r\n                              title={`${c.riskScore.toFixed(0)}%`}\r\n                            ></div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {c.lastActivityDays} days\r\n                            {c._churnComputed && (\r\n                              <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">computed churn</span>\r\n                            )}\r\n                            {c._churnProvided && (\r\n                              <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\">provided</span>\r\n                            )}\r\n                            {c._churnComputed && c._churnDriver && (\r\n                              <span\r\n                                className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-indigo-100 text-indigo-800\"\r\n                                title={c._churnContributions ? c._churnContributions.map(x => `${x.label}: ${(x.value*100).toFixed(0)}%`).join(' • ') : ''}\r\n                              >\r\n                                {c._churnDriver}\r\n                              </span>\r\n                            )}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                          {c.isContacted ? (\r\n                            <span className=\"inline-flex items-center px-3 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                              <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path></svg>\r\n                              Contacted\r\n                            </span>\r\n                          ) : (\r\n                            <button\r\n                              onClick={() => onContact(c.id)}\r\n                              className=\"text-white bg-red-500 hover:bg-red-600 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-xs px-3 py-1.5 transition shadow\"\r\n                            >\r\n                              Mark Contacted\r\n                            </button>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n          <div className=\"mt-4 flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              aria-label=\"Seed initial dummy data\"\r\n              onClick={seedInitialData}\r\n              className=\"text-xs text-blue-500 hover:text-blue-700 transition\"\r\n            >\r\n              Seed Initial Dummy Data\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n  return (\r\n    <div className=\"p-4 md:p-8\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6 border-b pb-2\">Churn Predictor: High-Risk Action List</h2>\r\n      {enhancedCustomers.length === 0 ? (\r\n        <NoDataMessage />\r\n      ) : (\r\n        <>\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <p className=\"text-gray-600\">This list ranks customers with a churn risk score of <strong>40 or higher</strong>. Prioritize contacting the highest-risk customers to improve retention.</p>\r\n            <div className=\"flex items-center space-x-3\">\r\n            <label className=\"flex items-center text-sm text-gray-600\">\r\n              <input type=\"checkbox\" checked={computeChurnWhenMissing} onChange={(e) => setComputeChurnWhenMissing(e.target.checked)} className=\"mr-2\" />\r\n              Compute churn heuristically when missing\r\n            </label>\r\n            <button title=\"When enabled, the app will estimate churnProbability for rows that didn't provide it using a simple heuristic based on the computed risk score. Values computed this way will be marked in the table.\" className=\"text-xs text-gray-500 hover:text-gray-700\">?</button>\r\n            </div>\r\n            <div className=\"mt-2 p-3 bg-gray-50 rounded text-sm text-gray-700\">\r\n              <div className=\"mb-1 font-medium\">How the toggle works</div>\r\n              <div className=\"text-xs mb-2\">When enabled, the app will estimate a missing churnProbability from three observable features: Support Tickets, Days since last activity, and MRR. Use the <strong>Settings</strong> tab to adjust the relative importance (weights) of those features; weights are saved to your browser.</div>\r\n              {(() => {\r\n                // read current weights for a tiny inline preview\r\n                let current = { tickets: 0.5, activity: 0.35, mrr: 0.15 };\r\n                try { const raw = localStorage.getItem('jarvis_churn_weights_v1'); if (raw) current = JSON.parse(raw); } catch (e) {}\r\n                const sample = { MRR: 1200, supportTickets: 2, lastActivityDays: 10 };\r\n                // reuse estimator module\r\n                const estMod = require('./utils/churn');\r\n                const res = estMod.default(sample, current);\r\n                const est = (res && typeof res === 'object') ? (res.estimate || 0) : Number(res) || 0;\r\n                return (\r\n                  <div className=\"text-xs text-gray-600\">\r\n                    <div>Current weights: Tickets {Math.round((current.tickets||0)*100)}% • Activity {Math.round((current.activity||0)*100)}% • MRR {Math.round((current.mrr||0)*100)}%</div>\r\n                    <div className=\"mt-1\">Example (MRR 1200, 2 tickets, 10 days inactive): estimated churn ~ <strong className=\"text-blue-700\">{(est*100).toFixed(1)}%</strong></div>\r\n                  </div>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n          <CustomerTable\r\n            customers={enhancedCustomers}\r\n            onContact={handleContactCustomer}\r\n            seedInitialData={seedInitialData}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// Component 6: Settings (Placeholder)\r\nconst Settings = () => (\r\n    <SettingsInner />\r\n);\r\n\r\n// Separate component to enable hooks usage for settings\r\nconst SettingsInner = () => {\r\n  const STORAGE_KEY = 'jarvis_churn_weights_v1';\r\n  const [weights, setWeights] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(STORAGE_KEY);\r\n      if (raw) return JSON.parse(raw);\r\n    } catch (e) {}\r\n    return { tickets: 0.5, activity: 0.35, mrr: 0.15 };\r\n  });\r\n\r\n  useEffect(() => {\r\n    try { localStorage.setItem(STORAGE_KEY, JSON.stringify(weights)); } catch (e) {}\r\n  }, [weights]);\r\n\r\n  const update = (k, v) => setWeights(prev => {\r\n    // ensure sum remains ~1 by normalizing after update\r\n    const next = { ...prev, [k]: v };\r\n    const s = (next.tickets || 0) + (next.activity || 0) + (next.mrr || 0) || 1;\r\n    return { tickets: (next.tickets || 0) / s, activity: (next.activity || 0) / s, mrr: (next.mrr || 0) / s };\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-4 md:p-8\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6 border-b pb-2\">Settings & Configuration</h2>\r\n      <div className=\"p-8 bg-white rounded-xl shadow-xl border border-gray-200 space-y-4\">\r\n        <div className=\"flex justify-between items-center border-b pb-4\">\r\n          <label className=\"text-lg font-medium text-gray-700\">Churn Estimator Weights</label>\r\n        </div>\r\n  <p className=\"text-gray-600\">Adjust how the churn estimator weights features: Support Tickets, Last Activity (days), and MRR (lower MRR — higher risk).</p>\r\n        <div className=\"grid grid-cols-1 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Support Tickets ({Math.round(weights.tickets * 100)}%)</label>\r\n            <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={weights.tickets} onChange={(e) => update('tickets', Number(e.target.value))} className=\"w-full\" />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Last Activity ({Math.round(weights.activity * 100)}%)</label>\r\n            <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={weights.activity} onChange={(e) => update('activity', Number(e.target.value))} className=\"w-full\" />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">MRR ({Math.round(weights.mrr * 100)}%)</label>\r\n            <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={weights.mrr} onChange={(e) => update('mrr', Number(e.target.value))} className=\"w-full\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 p-4 bg-gray-50 rounded border text-sm\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"text-sm text-gray-700 font-semibold\">Estimator preview</div>\r\n            <div className=\"text-xs text-gray-500\">Sample customer</div>\r\n          </div>\r\n          {/* sample customer used to preview weights */}\r\n          {(() => {\r\n            const estimateFn = require('./utils/churn').estimateChurnFromFeatures;\r\n            const sample = { MRR: 1200, supportTickets: 2, lastActivityDays: 10 };\r\n            const res = require('./utils/churn').default(sample, weights);\r\n            const estVal = res && typeof res === 'object' ? (res.estimate ?? 0) : Number(res) || 0;\r\n            return (\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"text-xs text-gray-600\">MRR 1200 • 2 tickets • 10 days inactive</div>\r\n                <div className=\"text-sm font-mono text-blue-700\">{(estVal * 100).toFixed(1)}%</div>\r\n              </div>\r\n            );\r\n          })()}\r\n          <div className=\"mt-2 text-xs text-gray-500\">This preview shows how the current slider weights influence a simple churn estimate. Values are illustrative.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// No Data Message\r\nconst NoDataMessage = () => (\r\n    <div className=\"text-center py-16 text-xl text-gray-500 font-medium border border-dashed border-gray-300 rounded-xl bg-white shadow-inner\">\r\n        <p className=\"mb-4\">No customer data loaded.</p>\r\n        <p className=\"text-base text-gray-400\">Please go to the **Data Dashboard** tab to load data from a CSV file or seed sample data.</p>\r\n    </div>\r\n);\r\n\r\n\r\n// --- Main App Component ---\r\n\r\nconst App = () => {\r\n  const [view, setView] = useState('dashboard'); \r\n  const [customers, setCustomers] = useState([]);\r\n  // modal state removed; use toasts instead\r\n\r\n  // Toast state: array of { id, message, type }\r\n  const [toasts, setToasts] = useState([]);\r\n  const pushToast = useCallback((message, type = 'info', timeout = 3500) => {\r\n    const id = Date.now().toString() + Math.random().toString(36).slice(2,6);\r\n    setToasts((t) => [{ id, message, type, timeout }].concat(t).slice(0,6));\r\n    return id;\r\n  }, []);\r\n  const removeToast = useCallback((id) => setToasts((t) => t.filter(x => x.id !== id)), []);\r\n  // Chart refs for reliable exports\r\n  const forecastChartRef = useRef(null);\r\n  const simulationChartRef = useRef(null);\r\n\r\n  const showToast = useCallback((message, type = 'info', timeout = 3500) => {\r\n    pushToast(message, type, timeout);\r\n  }, [pushToast]);\r\n\r\n  // Legacy showCustomModal now routes to non-blocking toast (keeps API compatible)\r\n  const showCustomModal = useCallback((message, type = 'info', timeout = 3500) => {\r\n    showToast(message, type, timeout);\r\n  }, [showToast]);\r\n\r\n  // Provide stable refs to the toast/modal functions so deeply nested effects\r\n  // (like TimeSeriesForecast) can call them without needing to include them\r\n  // in dependency lists which can cause identity churn.\r\n  const showToastRef = useRef(showToast);\r\n  const showCustomModalRef = useRef(showCustomModal);\r\n  useEffect(() => { showToastRef.current = showToast; }, [showToast]);\r\n  useEffect(() => { showCustomModalRef.current = showCustomModal; }, [showCustomModal]);\r\n\r\n  // notify helper uses the current ref value\r\n  const notify = useCallback((message, type = 'info', timeout = 3500) => {\r\n    try { return (showToastRef.current || (()=>{}))(message, type, timeout); } catch (e) { /* noop */ }\r\n  }, []);\r\n\r\n  // Handler to receive uploaded data (memoized to avoid identity churn)\r\n  const handleDataUpload = useCallback((newCustomers) => {\r\n    setCustomers(newCustomers);\r\n  }, [setCustomers]);\r\n\r\n  // Function to seed initial dummy data\r\n  const seedInitialData = useCallback(() => {\r\n    const dummyCustomers = [\r\n      { id: 'd1', name: 'Northbridge Systems', MRR: 4200, churnProbability: 0.12, supportTickets: 1, lastActivityDays: 5, contractLengthMonths: 12, isContacted: false },\r\n      { id: 'd2', name: 'Atlas Financial', MRR: 12500, churnProbability: 0.05, supportTickets: 0, lastActivityDays: 2, contractLengthMonths: 24, isContacted: false },\r\n      { id: 'd3', name: 'Horizon HealthTech', MRR: 3200, churnProbability: 0.28, supportTickets: 3, lastActivityDays: 18, contractLengthMonths: 12, isContacted: false },\r\n      { id: 'd4', name: 'Vertex Logistics', MRR: 900, churnProbability: 0.62, supportTickets: 5, lastActivityDays: 40, contractLengthMonths: 6, isContacted: false },\r\n      { id: 'd5', name: 'Aurora Retail', MRR: 2400, churnProbability: 0.18, supportTickets: 2, lastActivityDays: 7, contractLengthMonths: 12, isContacted: false },\r\n      { id: 'd6', name: 'Stratus AI', MRR: 7800, churnProbability: 0.09, supportTickets: 0, lastActivityDays: 1, contractLengthMonths: 36, isContacted: false },\r\n      { id: 'd7', name: 'Bluewater Media', MRR: 600, churnProbability: 0.55, supportTickets: 2, lastActivityDays: 30, contractLengthMonths: 12, isContacted: false },\r\n    ];\r\n    // ensure seeded customers include churn provenance where churnProbability is provided\r\n    const seeded = dummyCustomers.map(c => ({ ...c, _churnProvided: !!(c.churnProbability || c.churnProbability === 0) }));\r\n    setCustomers(seeded);\r\n    (showToast || showCustomModal)(`Successfully added ${dummyCustomers.length} initial customers to memory!`, 'success');\r\n  }, [setCustomers, showCustomModal, showToast]);\r\n\r\n  // Toggle: compute churn heuristics for rows that did not provide churnProbability\r\n  const [computeChurnWhenMissing, setComputeChurnWhenMissing] = useState(true);\r\n  // churn estimator (require to keep module resolution simple in CRA tests)\r\n  // we keep both numeric and detailed exports in utils/churn\r\n  const estimateChurnFromFeatures = require('./utils/churn').estimateChurnFromFeatures; // numeric\r\n  const estimateChurnFromFeaturesDetailed = require('./utils/churn').default; // detailed\r\n\r\n  // Calculate enhanced customer list (including risk score) whenever the raw customer list changes\r\n  const enhancedCustomers = useMemo(() => {\r\n    return customers.map(c => {\r\n      // If churn was not provided and user wants heuristics, compute from riskScore heuristically after riskScore calculation\r\n      const riskScore = calculateChurnRiskScore(c);\r\n      const riskLevel = riskScore >= 70 ? 'High' : riskScore >= 40 ? 'Medium' : 'Low';\r\n      const base = {\r\n        ...c,\r\n        riskScore,\r\n        riskLevel,\r\n      };\r\n\r\n      // churn provenance flags: supplied (_churnProvided) vs computed (_churnComputed)\r\n      let churnProvided = !!c._churnProvided;\r\n      let churnComputed = false;\r\n\r\n  // Compute churn when the user enabled heuristics AND either the CSV didn't provide churn\r\n  // or the churn value is missing/zero. This makes the toggle more robust to uploads\r\n  // where the churn column may be present but cells are empty/zero.\r\n  if (computeChurnWhenMissing && (!churnProvided || !c.churnProbability || Number(c.churnProbability) === 0)) {\r\n        // try estimator using supportTickets / lastActivityDays / MRR\r\n        try {\r\n          // load persisted weights from Settings (if any)\r\n          let weights = null;\r\n          try { const raw = localStorage.getItem('jarvis_churn_weights_v1'); if (raw) weights = JSON.parse(raw); } catch (e) { weights = null; }\r\n          const res = estimateChurnFromFeaturesDetailed(c, weights || undefined);\r\n          // estimator returns { estimate, contributions, mainDriver, raw }\r\n          base.churnProbability = Math.max(0, Math.min(1, Number(res?.estimate) || 0));\r\n          // attach explainability info for UI\r\n          base._churnDriver = res?.mainDriver ? (res.mainDriver.label || res.mainDriver.key) : null;\r\n          base._churnContributions = res?.contributions || null;\r\n          churnComputed = true;\r\n        } catch (e) {\r\n          // fallback to riskScore heuristic\r\n          const v = Math.min(1, Math.max(0, riskScore / 100));\r\n          base.churnProbability = v;\r\n          base._churnDriver = null;\r\n          base._churnContributions = null;\r\n          churnComputed = true;\r\n        }\r\n      }\r\n\r\n      base._churnProvided = churnProvided;\r\n      base._churnComputed = churnComputed;\r\n\r\n      return base;\r\n    }).sort((a, b) => b.riskScore - a.riskScore); // Sort by highest risk\r\n  }, [customers, computeChurnWhenMissing]);\r\n\r\n  // When the user enables/disables the heuristic toggle, apply or revert computed churn into\r\n  // the canonical `customers` state so Overview/Forecast views (which read `customers`) reflect it.\r\n  useEffect(() => {\r\n    // avoid running until estimator is available\r\n    if (!estimateChurnFromFeaturesDetailed) return;\r\n\r\n    if (computeChurnWhenMissing) {\r\n      // compute for rows that did not provide churn and aren't already computed\r\n      const weightsRaw = (() => { try { const raw = localStorage.getItem('jarvis_churn_weights_v1'); return raw ? JSON.parse(raw) : null;} catch (e) { return null; } })();\r\n      const updated = customers.map(c => {\r\n        const provided = !!c._churnProvided;\r\n        const hasChurn = c.churnProbability !== undefined && Number(c.churnProbability) !== 0;\r\n        if (!provided && !hasChurn && !c._churnComputed) {\r\n          try {\r\n            const res = estimateChurnFromFeaturesDetailed(c, weightsRaw || undefined);\r\n            return { ...c, _prevChurn: c.churnProbability, churnProbability: Math.max(0, Math.min(1, Number(res?.estimate) || 0)), _churnComputed: true, _churnDriver: res?.mainDriver ? (res.mainDriver.label || res.mainDriver.key) : null, _churnContributions: res?.contributions || null };\r\n          } catch (e) {\r\n            const fallback = Math.min(1, Math.max(0, calculateChurnRiskScore(c) / 100));\r\n            return { ...c, _prevChurn: c.churnProbability, churnProbability: fallback, _churnComputed: true };\r\n          }\r\n        }\r\n        return c;\r\n      });\r\n      // only set when something changed\r\n      const changed = updated.some((u, i) => u !== customers[i]);\r\n      if (changed) setCustomers(updated);\r\n    } else {\r\n      // revert computed churns back to previous values when toggle is disabled\r\n      const reverted = customers.map(c => {\r\n        if (c._churnComputed) {\r\n          const nc = { ...c };\r\n          if (nc._prevChurn !== undefined) {\r\n            nc.churnProbability = nc._prevChurn;\r\n          }\r\n          delete nc._prevChurn;\r\n          delete nc._churnComputed;\r\n          delete nc._churnDriver;\r\n          delete nc._churnContributions;\r\n          return nc;\r\n        }\r\n        return c;\r\n      });\r\n      const changed = reverted.some((u, i) => u !== customers[i]);\r\n      if (changed) setCustomers(reverted);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [computeChurnWhenMissing, customers]);\r\n\r\n  // Handler to mark customer as contacted\r\n  const handleContactCustomer = useCallback((customerId) => {\r\n    setCustomers(prevCustomers => \r\n        prevCustomers.map(c => \r\n            c.id === customerId ? { ...c, isContacted: true } : c\r\n        )\r\n    );\r\n    (showToast || showCustomModal)(\"Customer marked as contacted! (Local update)\", 'info');\r\n  }, [setCustomers, showCustomModal, showToast]);\r\n\r\n\r\n  // Calculate Overview Data based on current customers\r\n  const overviewData = useMemo(() => {\r\n    let totalMRR = 0;\r\n    let customerCount = 0;\r\n  // Basic aggregations\r\n  customers.forEach(data => {\r\n    totalMRR += Number(data.MRR) || 0;\r\n    customerCount += 1;\r\n  });\r\n\r\n  const avgMrr = customerCount > 0 ? totalMRR / customerCount : 0;\r\n  const totalRevenue = totalMRR * 12; // Annualized\r\n\r\n  // Heuristic churn and NRR estimates (best-effort without event history)\r\n  // We approximate 'at-risk' customers as churnProbability >= 0.5\r\n  const atRiskCustomers = customers.filter(c => Number(c.churnProbability) >= 0.5);\r\n  const churnedMRR = atRiskCustomers.reduce((s, c) => s + (Number(c.MRR) || 0), 0);\r\n  const churnRateByCount = customerCount > 0 ? (atRiskCustomers.length / customerCount) : 0;\r\n\r\n  // Estimated expansion MRR heuristic: customers with churnProbability < 0.2 are 'expanding' slightly\r\n  const expansionCustomers = customers.filter(c => Number(c.churnProbability) < 0.2);\r\n  const expansionMRR = expansionCustomers.reduce((s, c) => s + ((Number(c.MRR) || 0) * 0.02), 0); // assume 2% expansion\r\n\r\n  // NRR estimate: (startingMRR + expansion - churn) / startingMRR\r\n  const estimatedNRR = totalMRR > 0 ? ((totalMRR + expansionMRR - churnedMRR) / Math.max(1, totalMRR)) : 1;\r\n\r\n  const monthlySeries = computeMonthlySeries(customers);\r\n\r\n  return {\r\n    customerCount,\r\n    totalMRR,\r\n    avgMrr,\r\n    totalRevenue,\r\n    churnedMRR,\r\n    churnRateByCount,\r\n    expansionMRR,\r\n    estimatedNRR,\r\n    monthlySeries,\r\n  };\r\n  }, [customers]);\r\n\r\n  // Onboarding modal (show once)\r\n  const [showOnboard, setShowOnboard] = useState(() => {\r\n    try { return !localStorage.getItem('jarvis_onboard_shown_v1'); } catch (e) { return true; }\r\n  });\r\n  const dismissOnboard = useCallback(() => {\r\n    try { localStorage.setItem('jarvis_onboard_shown_v1', '1'); } catch (e) {}\r\n    setShowOnboard(false);\r\n  }, []);\r\n\r\n\r\n  const renderView = () => {\r\n    switch (view) {\r\n      case 'dashboard':\r\n        return <DataDashboard onDataUpload={handleDataUpload} showCustomModal={showCustomModal} seedInitialData={seedInitialData} showToast={showToast} />;\r\n      case 'overview':\r\n        return <DataOverview overviewData={overviewData} />;\r\n      case 'forecast':\r\n        return <TimeSeriesForecast chartRef={forecastChartRef} monthlySeries={overviewData.monthlySeries} showCustomModal={showCustomModal} showToast={showToast} showToastRef={showToastRef} showCustomModalRef={showCustomModalRef} />;\r\n      case 'simulation':\r\n        return <WhatIfSimulation enhancedCustomers={enhancedCustomers} showCustomModal={showCustomModal} chartRef={simulationChartRef} showToast={showToast} />;\r\n      case 'churn':\r\n        return <ChurnPredictor enhancedCustomers={enhancedCustomers} handleContactCustomer={handleContactCustomer} seedInitialData={seedInitialData} computeChurnWhenMissing={computeChurnWhenMissing} setComputeChurnWhenMissing={setComputeChurnWhenMissing} />;\r\n      case 'settings':\r\n        return <Settings />;\r\n      default:\r\n        return <DataDashboard onDataUpload={handleDataUpload} showCustomModal={showCustomModal} seedInitialData={seedInitialData} />;\r\n    }\r\n  };\r\n\r\n  const navItemClass = (currentView) => (\r\n    `px-4 py-2 text-sm font-medium rounded-t-lg transition-colors duration-150 ${\r\n      view === currentView\r\n        ? 'bg-white text-blue-700 border-b-2 border-blue-700 font-semibold'\r\n        : 'text-gray-500 hover:text-blue-600 hover:bg-gray-100'\r\n    }`\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 antialiased\">\r\n        {/* Load Tailwind CSS */}\r\n        <script src=\"https://cdn.tailwindcss.com\"></script>\r\n        {/* Set Inter font */}\r\n        <style>{`@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap'); body { font-family: 'Inter', sans-serif; }`}</style>\r\n      \r\n      <header className=\"bg-white shadow-md sticky top-0 z-10\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex flex-col md:flex-row justify-between items-center\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <img src={logo} alt=\"jArvIs360 by Data2Metrics\" className=\"h-10 w-10 object-contain\" />\r\n        <div>\r\n          <div className=\"text-xs text-gray-500\">Data2Metrics</div>\r\n          <h1 className=\"text-2xl font-extrabold text-gray-900\">jArvIs360</h1>\r\n        </div>\r\n      </div>\r\n          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\r\n              <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-blue-100 text-blue-800`}>\r\n                Local Memory Mode\r\n              </span>\r\n              <AuthPanel showToast={showToast} />\r\n            </div>\r\n        </div>\r\n      </header>\r\n      {showOnboard && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-lg w-full p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-2\">Welcome to Jarvis360</h2>\r\n            <p className=\"text-gray-600 mb-4\">Quickly upload a CSV or load the demo data to see MRR forecasting, churn risk, and run what-if simulations — no setup required.</p>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button className=\"px-4 py-2 rounded text-sm bg-gray-100\" onClick={dismissOnboard}>Dismiss</button>\r\n              <button className=\"px-4 py-2 rounded text-sm bg-blue-600 text-white\" onClick={() => { dismissOnboard(); document.getElementById('load-demo-btn')?.click?.(); }}>Load Demo</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Navigation Tabs */}\r\n        <nav className=\"flex space-x-1 mt-4 border-b border-gray-200 overflow-x-auto whitespace-nowrap\">\r\n            <button type=\"button\" aria-label=\"Go to Data Intake\" onClick={() => setView('dashboard')} className={navItemClass('dashboard')}>\r\n            Data Intake\r\n          </button>\r\n          <button type=\"button\" aria-label=\"Go to Overview\" onClick={() => setView('overview')} className={navItemClass('overview')}>\r\n            Overview\r\n          </button>\r\n          <button type=\"button\" aria-label=\"Go to Forecasting\" onClick={() => setView('forecast')} className={navItemClass('forecast')}>\r\n            Forecasting\r\n          </button>\r\n          <button type=\"button\" aria-label=\"Go to Scenarios\" onClick={() => setView('simulation')} className={navItemClass('simulation')}>\r\n            Scenarios\r\n          </button>\r\n          <button type=\"button\" aria-label=\"Go to Risk & Actions\" onClick={() => setView('churn')} className={navItemClass('churn')}>\r\n            Risk & Actions\r\n          </button>\r\n          <button type=\"button\" aria-label=\"Go to Administration\" onClick={() => setView('settings')} className={navItemClass('settings')}>\r\n            Administration\r\n          </button>\r\n        </nav>\r\n        \r\n        {/* Content Area */}\r\n        <main className=\"py-6 min-h-[70vh]\">\r\n          {renderView()}\r\n        </main>\r\n      </div>\r\n      \r\n      {/* Toast container (bottom-right) */}\r\n      <div aria-live=\"polite\" className=\"fixed right-4 bottom-4 z-50 flex flex-col-reverse space-y-reverse space-y-2 w-80\">\r\n        {toasts.map(t => (\r\n          <div key={t.id} className=\"mb-2\">\r\n            <Toast id={t.id} message={t.message} type={t.type} duration={t.timeout} onClose={removeToast} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n  {/* CustomModal removed; toasts used instead */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\ChurnChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\Toast.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\churn_estimator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\churn_toggle_ui.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\computeMonthlySeries.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\computeMonthlySeries_edge.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\csv_churn_provenance.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\forecast.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\forecast_async.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'holtLinearForecast' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { computeForecastFromRecords } from '../utils/forecast';\r\nimport { holtLinearForecast } from '../utils/analytics';\r\n\r\n// Mock holtLinearForecast to return a Promise-like object when bootstrapAsync is requested\r\njest.mock('../utils/analytics', () => {\r\n  const original = jest.requireActual('../utils/analytics');\r\n  return {\r\n    ...original,\r\n    holtLinearForecast: (series, monthsOut, options) => {\r\n      if (options && options.bootstrap && options.bootstrapAsync) {\r\n        // emulate worker promise with revoke\r\n        let cancelled = false;\r\n        const p = new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            if (cancelled) return resolve({ level:0, trend:0, residualStd:0, alpha: options.alpha, beta: options.beta, forecast: [] });\r\n            resolve({ level:0, trend:0, residualStd:0, alpha: options.alpha, beta: options.beta, forecast: [] });\r\n          }, 10);\r\n        });\r\n        p.revoke = () => { cancelled = true; };\r\n        return p;\r\n      }\r\n      return original.holtLinearForecast(series, monthsOut, options);\r\n    }\r\n  };\r\n});\r\n\r\ndescribe('async forecast integration', () => {\r\n  test('computeForecastFromRecords returns a Promise when holt with async bootstrap', async () => {\r\n    const records = [ { id: 'a', MRR: 100, date: '2024-01-01' }, { id: 'a', MRR: 120, date: '2024-02-01' }, { id: 'b', MRR: 80, date: '2024-02-01' } ];\r\n    const maybe = computeForecastFromRecords(records, { method: 'holt', monthsOut: 3, holtOptions: { bootstrap: true, bootstrapAsync: true } });\r\n    expect(maybe).toBeDefined();\r\n    expect(typeof maybe.then === 'function').toBe(true);\r\n    // ensure revoke exists on resolved wrapper\r\n    if (maybe && typeof maybe.revoke === 'function') maybe.revoke();\r\n    const res = await maybe;\r\n    expect(res).toHaveProperty('monthlySeries');\r\n    expect(res).toHaveProperty('forecastResult');\r\n  });\r\n});\r\n","usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\forecast_monthly_input.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\holt.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\linearForecast.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\parseCSV.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\streamingHash.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\__tests__\\summarizer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\d2m_logo.png","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '�'. (1:0)","line":1,"column":0,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\b\u0000\u0000\u0000\u0002\u001f\b\u0006\u0000\u0000\u0000�W<0\u0000\u0000\u0000\tpHYs\u0000\u0000\u001e�\u0000\u0000\u001e�\u0001\u0003Nm�\u0000\u0000\u0000\u0019tEXtSoftware\u0000www.inkscape.org��<\u001a\u0000\u0000 \u0000IDATx���y��e}7��uf&�̄E\u0011q\u0001�����bk�c�X\nI�T� ��>�uAkK1\t�R\u0019�jU6����i�km�F�0�$�%��E���Z�D���V�d&$���珠\u0002�!�s���y�_�y\u0001q����grf�?�u�Zk\u0000\u0000\u0000\u0000\u0000\u0000\u0000�����\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000��S\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0016\u0018��\u0000\u0000\u0000\u0000@;M�h�\u0003J�yHM�O�fiR�]2���n��������\u0001\u0000\u0000@۔Zk�g\u0000\u0000\u0000\u0000Zb�6<�3P~�6��S��{x�]I�DI�5\\w�-W��kN�\u0004\u0000\u0000��R\u0000\u0000\u0000\u0000\u0000fm�y\u0013��\f�-593I9��~3�\\0rŊ���l\u0000\u0000\u0000p�P\u0000\u0000\u0016�-�[\u0006�r܊�zz�yXM���2�%��I���t޳z��/�`\r\u0000\u0000X�v���N:��\u0001\u0007\u001dR�_�L���s�I{�7\u0019\u0000\u0000\u0000\u001cZ\u0014\u0000�\u0005k���\u0015i��$���e�֒+�&'_rꥏ���u\u0001\u000e5%�C�<6��$\u000fJr���<,I'��wx�[�4InJrc��$ٞ�I�O2=Gs\u0003\u001cr&�n�Ѥْ�٧�w�\u001cv�s36��>\u000b\u0000\u0000\u0000\u000e=\n\u0000����kRʥ�w\u0001�\u000f�g�\u0019\\�j�_���߷q|ۊ��e���d�;�Sk'��f���@v���\u001d�SC�8�\u0007��+�?�'��$OI����?ڥ��I>�ds��I�˾����k��\u0007͔�'�c�N�\r×���\u001fk��ε\u001bNN\u0006zq��\u000f5��|jɥ�~q�ׅ��[\u0017^�l����<�k�%\u0017�\\���\u0001\u0000\u0000�!D\u0001\u0000Xp6�mNR�&\u0007v_�\u001e(�,77OY��\u0013v�s��c[�#)���\f��ۑ��$7��\u001b���Ձ\\?���:����<\u001f�\u001f�e�}���䧓\f�Ѻ_M��Iޖ}�\u0003���u��,���O�a��'�i�s�5#���MIF�z�R�o\u000e_��O�z]��&�l|MJyI�cw��s���O�Z�s\u0001\u0000\u0000��\u0006�=\u0000��x��\rG,N}s����$�O�G��\\��I\u0016�eIN��-5%�$�I�23�al�\u0017Kr]j�ҩ�+��a���q�\u001eZ���$�O�S������\\x�ۇ��*���0�|�u\u001bN\u001a�����=Ƚ5Y�3҇���]�{�PF��{��,e�׳��\u0019\u0000\u0000\u00008\u0000}::\u001b��,j�_P���{��*Ʌם{�P��X�\u0006JrB�g�Է4���\u0013c۾�����ql�s֏m��\u0003\u0002]�$�$�J��̾\u001d��̕S�lI�$���(�Sk�~�p jͳ�=\u0003�L.��Ӓ\u001cы�Z�/�\"\u0017\u0000\u0000\u0000�N\u0001\u0000X`�3�=�\u001d���<�ȟ��\u001cmS�\u0007���&��f�[\u0013c��=1����\u0016� = ��lKrA�Q��.NN�$��P|�yv��\u0017��\u0006�y���(�+�=\u0007��ԓz\u0018����\u0004\u0000\u0000\u0000�\u001f�����\u001eச4���\f-����US���1Gܰ�m붌_?��Z�d<�.����w���~�\u000f'9�ϳ̵cw�x��=Ľ�����$��=\u0007��Z������;��\u001e�\u0003\u0000\u0000@+)\u0000\u0000\u000b�����2\u001f/ �\u001c��\u0011\u000e\u00155y`)�t�Y�Չ����<����{&�n���ߓ\\�����?��SI\u001e��A��@�\u000b�X�\u001a���|QKY����F�\u0007\u0000\u0000\u0000\u000e�`�\u0007\u0000��:Y28���\u001e�\u0007�\u0014��sﰚr�L��\u0005\u001bƶ���,��ޝ�~\u000f�ܺ���\u001d������\u0015���\u0017���|��3�$Y��\u0003�\u001e�\u000b\u001e�dK�S��[G�\u001b59+g_u~�}ּ}=�y�5G��i�����/�2:�t�)M�+R��+V���3-D�Z�^S{\u0015_���F��\u0001\u0000\u0000��\\�\u0002`!;�$o\u001ayԶ_�tQ9w�+����\u0003�;W����Gn{|)��IY���xIJMR����{>Z��$��<!ɍ}�e.�����<�|�߃ܣf��(�q�v����R��IV\f/��ԚE%%5�\\�g[�j�[{v���y�����\u0005\u0000\u0000�y�/�\u0000h�\u001fkJ��\r\u0017o�d���\u00179\r�=���Q9%ɲ��{,\u000e-\u000fH�$OM��14�Vf��<.\u0000tR�ӳ�ƴϹ�'G���2����B)yH�Gj��3�7\fu\u0016�M2���Z�ng\u0002\u0000\u0000��@\u0001\u0000��\u0018,5/\u001b}Զ�6�t�9��減�=\u0010\u00073��1��6��r�\u001dw�C\u001f�T��$/�� �W���U������{��ڵ��ck�~�����]�5+3:��Y�8�;G��\u0019ߙZ�񃵔3�\u001e�鼳�\u0000\u0000\u0000p\bP\u0000\u0000�UjrZY���\r�۞q��rG�.\u0000W����\u001f\u001ahNK)�G\u001eUOm�\u001c�b\r���$�H��~\u000f�cGN�2z�p��~\u000frWMm�I���]��.�)sf�`y��LNO��k�%\u001f\u001c�tŖ��\u0001\u0000\u0000�!D\u0001\u0000�6Z^���������W\u001em���ή\u001a�~�h\u0016?�6Y�d��`\u001e�o��}��k�I^��i�\u001e��j�9��\u0005��<��#0?�`�c���ʤ��˿�\u000e�d��u\u001b/L-o�R�M\u00033�.e\u0001\u0000\u0000�!���\u0001\u0000�G\u000eoJ�f���\u001f�� ��H���j�\u000f'� �c�=\u000f\u001c�����~\u000f�k%9#�\u001f��\u001cw�c��G$��~�A��8Ӊ���[J�$%OK���3��\\��I.�Bԭ��Z��\u00157t!\u000b\u0000\u0000\u0000\u000eI\n\u0000\u0000��\u0011��l�|����{\u0010�5.��\u0000�V�ѝ#�����\u0006�yN�g\u0000~���W^��yI�\u000e2��Z;O\u001a~�i���X\u0000\u0000\u0000p�Q\u0000\u0000���7S���^����{\u0010��ݒ��$�I�WI�L��I�:����d�]s<Ӫ$\u000f��5�^)��{�;�����\u0005`��o�\u0019�y|J��${��þ�R�\u001f9l�I�W��｜\u000f\u0000\u0000\u0000\u000e\u0005��\u001e\u0000\u0000����\u0006�ޖ�թn4\u000f��g�|���k�|�^<f0�c����7�<�g��3��9I.��:}U��7��C�\u001f��Sn��,�k7�h�G�{\u000e��9�������<��fp��jm�RR\u001e����,���OR��I�tS��ɣ�1W����s\u0003\u0000\u0000@[(\u0000\u0000pw��\u0003�U{X�]\u0014;�7��^)Y��\u0015�֞��ݸ?-�=۲oG�_'�z\u0010��ξ��g���ӫ��%ɱ�\u001a�n<+-/\u0000$Y�h��3��e�\u0007I\u001a���\u00024�3nJ���\u0000\u0000\u0000�9�\u0000\u0000�\u000fh:��V����@\u001f7q���9<\u000fNɃS�#jɏ��$?�dQ�\u0007=@��\u000f7\\�����r�u��\u0005�'��6���o��Y�lH�$��\u0017��{WOH2�dg��g�)�Pj�7뤒s��\u0002@IɚzvR\u000e6�3%��ɓ�9\u0016\u0000\u0000\u0000\u0000�W\n\u0000\u0000t��7��;�v�nK�����\u0017���%C���թyf���4�P)ySJ��V\u0000�7�I�6�����$9;�5I�҃��$O�=�)��|�)u�\u0005��Sv^p�ѣ�����g\u001d�]�o���<�\u0003J>Rk\u001e�ő\u0000\u0000\u0000\u0000`^��{\u0000\u0000��ם�c����Yu��_\u001b��|PI~+ɿ�i�'mxŶg�im8�}3ɹٷ{��\u0017��kO�3�|�G�����h��]�\u001a��L�٥���t�sf��ZsmR�U:\u0003\u0000\u0000\u0000�9�\u0000\u0000��:���M�\u001c_�V�r��k���wZ��*%��\u001f���\\�\u000b���&yt�?I����7���\u001ee\u001fߣ��\u001a]z�ʯ&�Z7�j)��\u0000?+�㝤��l\"\u0006;\u0003���.M\u0004\u0000\u0000\u0000\u0000�\u0002\u0000\u0000�QSO\u001f?�rs}LR^�df\u000eWpgf��s�\u001e\u001c�nM�<+�ۉ�?�o�\u001d=�]ރ�n���/Mr]��~fך�\u000f�R�\u0001����''y�,\"����S��\u0014'\u0000\u0000\u0000\u0000\u0000p�\u0018��\u0000���2~���̢U锓K�\u0007֤\u0017��oM��PJ���\u001bo��IW���\u0007k�2+�t��$/�p�\u0017'Ji�&ɱs�p���Ug�g�{N�\u0007p(��$�Hr}��J��$���{d��fri��d�S5uu\u0017�:Mg��$��B�\u0001��9ev\u0011�|�?�\u0000\u0000\u0000\u0000\u0000�!C\u0001\u0000ڮ�l�h�y%�_����&u��M��jM�e�M�\u001c�_\u001bƷ�;}섫{�\u001a-r�+\u001f���/��\u0013g\u0006�7$��ޯX\u001f6򨭫�\u0013>������1�/%��߃��#�~\u0001`��y]3�hht��O���\t��9��\u0002���\r�e���ŇPS��������\b\u0000\u0000\u0000\u0000�\u0002\u0000���y[\u0017�W��'9�K�\u0000\u000e��KS޿al۫N\u001f_~��/�Btګ\u001f�\u000f�d�ɻ\u0017��%yr�׫)��d^\u0017\u0000�?~�\u0011\u0003ӻ��\fvJM9���I��Nʞ��󝧎=zg�g�{���\u001e��ٻhh��\u000b��ޝ��I�~\u000fr\u0007_�A�H\u000f2�bpo]V��Oe`�K��'v��p��+N�ޥ���:�[���}g��I�o�mr�`:��>.\f�[��z���ř>bo������`��13��ݥL\u001e��S�KY\u0007\u0016�o�7q�P�hhѢ�\u000e��\f\f\r\fΌN7��,�ts���\\o�[�x�3���9\u000f֭k6�gq���m�S��戦\u0019�m(ӻ�NwvL\u000f�޻�?6\u0000\u0000��P\u0000�6;�\\���>NPJ�\rc۾y���7�q\u000e\u0016�S^{�-�\u001f��鋚��%y\\/�*��6�o;ᴱ�[{��\u000f�e|��myȣgf�G�RNL�I9>�\u000fJr��dQ:�I�|�\nV'5�T\u0016g���ɤ�����o5����O����?�:������?�yX��>ߋ����\u001eH���?�5�)��JS>�\u0019�|z��\u000f��y�|������A�\u001edvES\u0006�-{���\\;��$�u!��t:�$��.d�+�i�3ˈ=S�{>>zۢ��t�ۧco�Xw�#\u00072��v�Xj=!�\t)y�@I�N'�&I���I���(��ډ�$7$�!%�Q�O\fԁO.������B�ܺf�}\u0006\u0007��i�\u0013�z���'ɑ%�Ѥܜ�|�4��#���\\q֮~�;/�oY�k�ԏ�̔�H��ʾ��c�<t�P��=�N'���Z;\u0019(M�����$�ř\\;�$�JʗJ�\r��Z��t�?�\\���_�o]��>\u0003��\u0013�͏��\u0013k-\u000f/�\u000fKr�@��t:\u0019�Ij:)�le(\u0019��L���NrcI�\\SoH:����,�����\\�7���Ϗ\r\u0000\u0000�P�\u0000\u0000-�q|��$���\u001cIR��6��׆��\u001e>g;\u0007Y؞1���l~��V�\fN�s�\u0007�p��4��$��p�;�8~�1��yJ����\t5�>>i���|����η�$�)ydRO)IRj6^���8��R>0��֟5��^�\\?~�#\u0007���}�޻�d�ן\u001e,/�\u0018ۺ�`\u001e��,�䴱\u0007��3%��/���\u0007\u0006g~�����<!����;?�\u0007b��]�G���KI���Ƌ�ݔ�\\S:���su���\u0005�\u0017��T\u000f2�b���=A-\u001fK��ҍ�Z3w\u0005�5W-M\u0019=c�)�t����1y���ͫ�(za|����'<%\u0019���zF'9����ޱI�?�I\u001e��ѩYU�4���ډ�5yO)�=×��T//JN������߉�@����K�\u0019�k'\u000e�������.[�������n\u001a��K\u000ff��W>?r����ﻝ�~xjY�j-�5P����gGM�}�Ԓ�dgF�?�<s�S\u0017��\u0003���y\u00075�=hjgò+N�x73gkj�ď%匚zz��'eh���?�QI=�&'}�kS3�f�[em>�R��=8��99�c|˒�[o;5�?_��\u001b(yԾ��%�f;����I���qIy��\u0001�I&�2��\u0013_H�Rꖽ����/Y��\u0007\u001f\u0011\u0000\u0000�!M\u0001\u0000ڪ�/��\bw��ԁ�I^��AX8N{�C�6q����R>�d�W����\u00000q�����������zr�G�і�cR��_\u001d��oL\\��m3�3oX��G|�\u0017�uҜPS.�E��R�o�\u0003��uG���'��\u0005��.n��SK:OO�Ƀ�y��~��[�O�+�)�2����x���\rN�7����v��3ڃ��\u001edvE��e��뇓t�\u0000��Gv�����+N��.�ݣ�e���}\f\u0007�nN���N7������\u001f�����5?���<�\u0017/459!Ʌ��\u000b'�L|������oz����\u0017'���գ�9���o\u0007��ܔ�^\u0017\u0000j��%9�`ֺ���I��\u001e������[�\u0005et�\u000fR\u000ft�{wy���{t:��\u001e���I�^\u0000�m�Ƈ��ιI}n�c�耛�j����E{��~j�ğՙ��\u001ey�\u00197u{��5\u001b�PK���g%9���wc0���j-�<8�L���r)u��e���\b\u0000\u0000�%\n\u0000�B\u0013�[\u001f��'�{�;���)��~\u001fg�²�'|l���^Wj^��e��~�\u000bG�\u001e{ķ�\u0015x����F�xU3S~9G�\u0015��h�OD?�֬�\f\f�p�ض?\u001e�,��^�x?\u0014]w�uC_��+;M��Ȳ�$���|\u001f�Z�L\u000f�7\\����4�����\u0002uL\u000f2o�AfWtJ\u0019M��P�p3����s�����w�LmΩ��V[���I�iʒ�ϼo�[^������C��ϯ�,�\u0012\u0007�5��ɡ����x��a��\u0017\u0019\u001bk��\n\u000b�-/�X>0�ķ��'�{��f皉��dMI9=�=+��\u000b�5��2����w+tr���K���R�ڭ�Y8��rv��\u0001\u0000\u0000���\u001bb��V�y|z�A�=`�˾ԋ\u000b0��ԭ�_��K=\\b``f`U7�֏o?n���/\u001fm\u0016�X�������7;�\u000f�Ғ��iv����\ta\u0016���m�N\\���&�\u0000\u0000 \u0000IDAT�қ�9��Ҕ\u000f�Գ2�\u0017��gI���N3��m���0}֋�?7� �+jٷ{~��V~%���Vniʳ��uO�}��a��پ&�4|�'�%IJ�\u0019��X�CI�\\��y�{:�O-\u0017��7����&o���\\��G�4\u0003�1�v��\u0006g�\u000f.�\u001f��\u0017lx��ډ\r�dKI�H\u000fO��[^<�|�ډ\u000f$�C)yj��\u0001\u0000\u0000�7\u0014\u0000���L���\fw�\u0019ث\u0000�\u0001;�\u0007�J�K{�FS���fl�hۺNS���55�o7��c��\u000fN�m{�Ug��\u0017�se�E�ϟ\u001eȶZ�.�Q��g?�_��o���?�2��P=��� s{\u000f2��f�\u000e�>ѵܒ�O��pR�����<#ɒ�d�R��鵴�\u0000�k��\u0007M�h�#)�/�y�}^�\u0013��\u0013S�6�V�G��v�h�O�dK��\u001e�{�/�2�s��[J���$])��7Sk7�;8���^l\u0000\u0000\u0000��\u0014\u0000��j����3\u0003\u0003�r.�U�<��I��U~I�0�N\u001e�dA}���wG\u001f����ǿ6����J�.�绤�`�9���\\�#��e��$�� ��\u001edvE��E��鼣�ٵv��f�\u000f.�Y��4\u0003���7Y�'\u0000L��8�)\u0003����u��Z��\\7��9t\u000bF��ԅ���Sߓ�~ϲP�X��I#Kv�K�y~Z��?Ir����u\u0013﨩oMr�}\u000f\u0000\u0000\u0000pHR\u0000\u0000`������=\\�W����\u001e��[��N3������C����#\u001f�j��E�\u001ed\u000e���]μ-�g���5M��E���V\\��\u000b]�v��{�3Ďu�J�)�\n��ʲ�?�\u000f���΂.\u0000L��tAJ&�ܯ߳�P5�6uˮw���\u0016���\u000b޹�\rez��I\u001e��Q\u0016��u\u0013/����dy�g�o�p���`6v�\\\u0005\u0000\u0000�¡\u0000\u0000��0�k�_%��G�C#��\u001eף�`�T=�-�\u001e�9s�h��O�=�\u001c��\u0007��L��\u0007�]Q�r�}Iy{\u0017�ݱ�=���@�����d�N��������\u0002=\u0001��L��x]J�$\u000b�g�Z�;G��}U�vP/\u0010�#�8���'�s�uC��&��ּ:m���$�[\u0006���vUJ���Q\u0000\u0000\u0000�[\u000b�I\u0000pꥏ�L�\u001bz�_����*{A���\r\u0017m}n��`n��y\u001bǶ�Z��\u0003�Irf\u000fr�ۃ�.�s\u0001`z`��\u0005�\f�h'i-eֹ����ߥ\f� ���k&�L��~�r�J����F_��9\u000eE;/��蔼��s,\u0004�|���e7mLM��\u000e�ܱ��I]��9\u0000\u0000\u0000�{\n\u0000\u0000,\u001cM>Ы���^e/\u0014��7O�o}p��`��7l��/>��S�PIrE���n��o���U%�N\u0017�\u000f�d�%����_S�����w�Y��$?3���l\u001d�bէ��.��]L�h�\u001f��7�=�A�Y;�f���=�!��~e���=Ƽw����S�K-����<7�v�\u0019�����\u0003\u0000\u0000��P\u0000\u0000`�(\u0003ٔ}\u0017�z���䈦�k�=\u0004s�\f6��{�\u001e��$�� ���؃�n����%�<\u0005���\u001dS'w1/Mg����g�&y�\u000f�.�\u0013\u0000v���ݔ�~�1[��?��k\u000e�b�\\ٱn�Q%E�bƷ\f�\u001c�;�~��[\u0017^���\u001eJ��\u0001\u0000\u0000�.\u0014\u0000\u0000X0V��pkM��G���(wA))�Y�\u0017��s0Gj�Z?�����xt�^\u001dC��\u001e�vM�����ɻ��tm�:������>�Ӽ�T�¹���\u000b6=�Լ��stCMFgff�4%�߳\u001c\n:\u0019��$K�=�|7u�+J�~��k��C�%���\u0000\u0000\u0000�\u0014\u0000\u0000XPJ\u0017�����t\u0002@Mrs��&ٞd{I�'ݼxw�:�Ҽt\u000e����������Kg��|\u000e֙K�Oru��=Ⱦ>ɦ\u001e�vU)�\u0007\n\u0000#���z�\u000fwq�3s���n\u0004����I��Y�|n���?�\u0003Zʂ�\u0000}�K7\u001cY�������J�5�\u001fO�$���[=[��i�k7>�g�ܮ��VG����u�ά���{��;w�pM���j���X����J��9Z\u0017\u0000\u0000����;\u0001��j��k)�\u0017�\u000f\u001c\u001fOgl�g�\u0018�;3I>SJ>]��\f�\\?3���m�3_=k��{��\u0001�Ƿ�03S~2%OK�s�\f�`�gN�l��V��\t��A��l&ɿ��ӝ�Ϥ6�Oי/���{�\u0015[��N�'S��R�s�:���J����/=�W?�k]Ϟ{˒lL��G�c�Wؘ�j�����I�n�p��P9mx_�bV�frN��v���\u0007v�/$�{\u0007ޚ�c{\u0010]k�����h�sC�8k�]�aǺk\u001e�I�2��z��tw�rqν����jWo��F��h�CK��i��\u000b�F\u0006OK�}z\u0012^�?���M�G���Ӌ\u000f��\r\u0019\u001b�����M,�\\R���<df�sR)����xj\u001e����&\u0000\u0000\u0000�L\u0001\u0000�\u0005����\u001em�\u001c����\u001cIN�ћ�}J�?M�ޒ�yO���g�=�;\u0007���ƖoM�5���?~ú�ffMI^��~M_���I.�b�!�~;�������mчO�q7\u001fȣW��\tےlK�\u000f�d��=���I}y��K������%ym\u00173�a8�{���\u0006�%yO�������Ǯ���[:=��t�t���t�\u0000P�Y\u001f��w`�\u0016\u0000&�L������\\?_S{���?���k�e�~>��3���S�L�F-�I\u000e��\u0004%9~j�_\u001fN�ڍ<8\u00183���$G�a�=Iݞ�/���&喤�NrDM\u000eO�qIY�.~MoJs�,�TwgG��F��W޹Dt�\u000f��V�\u001eI��}o��ޟ��~x갡��ԕ5�YI����\u0000\u0000\u0000|�\u0002\u0000\u0000\u000bJ��r��(�dxpi����ۦk-�/\u0003�ˣo�y�I]�\ty{y��\u0017m���$��Fn����\u001c@\u0001�Is�@:Wݻ�zb��\u001d�l�`CI�:�\u0007N�\u0019����3I}��mSٳ�v�\u001f�S^{�-I�7^�_�R:\u001fH7��[�Y�\u0005�#�|0ɓ{��$��,���I�{��t����1�v��$���J匜�~8W�>��{I��\r�-�<v��\\{�%+��2�?ξj ǎ^���id�̳\u000e�\u0019{��p�֩5\u001b?U;eSj�ۍIj����+S������-���+|MY��\u0015ݘ�\u000e>���\b\u0007��/ty\u0016�hj��3��6G��Z�Ҕ��N�\f/��ٌ��ÿ\u00078ob����M�����k���\n~����o�N󔻽�ʁ�r��p�!Ɇ�o9jǮ��5��dUܚ\u0012\u0000\u0000��\u0014\u0000\u0000XPf\u0006��6�������N��\u0019~K�?i:�V�\u001d��.g��W��O�Ʒ��4�CI�rO�$O���/\u001fyow��\u001e;��ɽ���ql�\u0005I.��pw58�\u0017��������\u0007�֚��2�y�W=�K�Zd�+\u001f���\u0017m}f���$Yҥؓ֏��c�����{��I6%y|\u000f�xK��a��))o��]*\u0000dd����G�w\u001dtBә����.���SǍ�Zj~������\u000e\u001f��9�|?\u0017\u001e���\u0015�>5�n�ʚ����ϋ5'�|��ώf��~ػ�\\��^}^�8Ӊ��|~�s�A���+V�Q73�\u0007ΛX��99�ho-����7�~�ƽ�������)��$�ٽf���e�7����+��k7��C�/J\u001er@��W��Y_���}e��$\u0013;�]��N�yE�S��\u0006\u0000\u0000�!N�\u001a�\u0005ex�P�wkO3T�U\u0000�J�%\u0003��ǯ\u001a_��^^���\u0015c��}R���{��d��u1��v���v��{���������w�~�\t���Ww1�Sf\u0006\u0016�/�\u001f��\u001f�ۋ�ے����sj��\u001d��|������ߙ���Mg��{�\u0019�QRjS^��̚\u001d��s���x?�/[qm�7ti���_�V\u0016\u0007ew�����\u0017t:��jg��#;gFF:\u0003���{L-yLM�Ś:^K�)�N=Y�\u0016���䄞.R�f����e+_p�\u0017����+N�>r����ޛ�ԒW&ٵ�\u0007�nɞ�\u0013����'G\u000e��ۻ��\u0003�]v��G._���L��^�\u0003\u0000\u0000p�q\u0002\u0000\u0000\u000bʑ7�<u�1\u0007�!�^\u001b���}\u0001����.{/<c��\u001b�0�\u0001��\u0019|âf��t���i�$ە��zG33s��W=�s�p\u0019�o�MY�n�׸�\tɂ����$�H�>����$����\u001e�1����S�n����ۍ�����%\u001f:��מrˁ>vjݦ����Y���K_��+����\u0017m<-�<�[y%�9Ӕ����\u0005�\u001ff�3p�d3����kL�O�����=uz��q\u0000v��76���e����\u0013^F��$7%�>�{�\\<y���/��skɱs9lW�������\u0015�����>yI�ƺ^��ϛVޚd�u\u001b�|&�����\u0018i�t�\u001b䒯��c�;�ް�?�b\u001d���ޝ��Y��\u001f�^�L�&���� �д�*�,���D�&-\u0005Ԣ\u0007��w���(\r�\u001bө\"\nm��\u001d�#z\u0014P�Q�6S�h�\u000b*XQ�զ-��\n]�4mf���G\u0000�����<�'���/h3�u5Og&��}�\u001b\u0000\u0000`�`\u0007\u0000\u0000��r�%�\r)�;Ӫ��3���]��HGu��81��I:���zIׄ��n����5�Z��u�&����$u\u0016�l���P��5R��i����Jv�_�N����b\nyG���q;�@��������ʿ2�p�rnv^�E�\u000b����p�ÿ�eӆ-�\u000eT\u000b����r�(,��X��g^�6��g?к�s~��\u0019'%5\\��O�.����ou�\u0019�Kz�|삮�\n\u000b��EQ����Z�4.hs׋t��\\К\u0000\u0000\u0000\u0000��`\u0007\u0000\u0000�����2/MH$�f�\u0007v��]�)燜eg��J7?1H-��!�d��R��ӞAz�z�}a����=^�7$��\u000e�J��^�>u��~��7\u001ey���a*�;$}k�\u001eR*E�#���qEC#s���3W�f��%\u001f(X�ŀ�$I��wL�)!jE杒~\u0019�\u0016��\u0017[�t��\u0016O���%;�-:��I������E]��1��򱚶�n��i��\t��[��\u0014z\u0003\u0000\u0000\u0000\u0000j@\u0000\u0000x���;_\u0010���e~�I��-�]\u000fn�.=��ok����>3�������8�GK~lR�w>\u0000�(��UQ�\u000f�]�cI���9Ńj:K\u001aɉ䫪���m��{[�,�+���\t8B��%M�C�oH�W�>�(\u0016cu���tv��G��V~a��·��\u0001}\u001b�|������u;ҳ�D��h7��\u0019�m�.��\u001f��c��\u0015n�߸yPR����\u0000P\u001f�lmj����o\u001a���\u000f�}M{��B\u0006l���ym��B�\u0012��=���\u0007W����z^S������\u0001\u0000\u0000\u0000\u0000�\"\u0000\u0000<��\u0019�el</��\u0007%o�?��I�;G|x�b����\u0017{��~77�?g�y{�\u0017�\u0011�Mc[�-��6[�n�\u0007_<��x�a傭)Ya�e\u000fIw�*���Ts\u000f���\u0010m��\u0017K�\rV0\f�t���$��1\u001d�o��\u000fԡO��/�Y�\u0000@^Mz���n�#\"���\u001f�l�n����\u0006,\u0017GM~E�z�T�ZQ��[$?��Z�Ce2y2�eC����xή�{ӆ�\u0007I�ء�2O\".zc۸��\t�\r�b{ԣ�O/��U�z�G�w\u0005=b\u0004\u0000\u0000\u0000\u0000��D�P\u0006F�\u001f�I[��o�������:���q����Қ���\u0017\u0018��*��\u0013+^�:�w\u0000XYZ��5EA�D����;t������|����yo�뽫��$]��,�_'��*u蕪¢��%�\u001c��I���/>yU�y��8l\u0019�\u0007���F:N+����p\u0005��-��7\\��0�s�J�l8��\u0011�\u0016��i^�E3oK{��Y��\u0012(�Ql\u001fQqjþ?Dy{4��&uD9�i���\t�V&�\u000f\u0017\u0000\u0000\u0000\u0000 \u001cv\u0000��W.�\u001e\u0017E�\u001fK:0�\u0019\\z�ž���կ����F��\u0012h(Q�&x2;\u0000�[����\u0001�e\u001f�{W5\ruȼC�:\"�\u000e��!�$i�D\u0005^$�b\u0005]`Ǝ���n��*\u001d9�CU�pS��\u001d�u\f_o\u000fz�-�F��/��D��:�[*�xI�z\u0004Bxf����@�^����^۳\u0010�_x�(�^PK3�ʻ\\t��Zj�e��\u000e�\u0007�;�\u001c��ӹ\u001e\fU��j���v\u0019Ɋ{\n�-��\u001e�!��[\u00025{Z.��M�\u0001����{��\u001e�\"iL\u0002�[\\�L��ͧ��b���/�3�>\u0000\u0000\u0000\u0000�\u0000\b\u0000`���.0�%��!=_\u0016}ER\"�U\u0002Y\u0011ǚ\u0010�����9W��L�����2߯='J�\u000eU�#zl���\u001d�:�Y�\u000e�Ir�?��\t��8�\u0019����;���c�=�\u0014��h�:$\u001b�/����\u0005�\u001b�z�\"�b%���L�&�T��;��,W�\\^��>�0�����KZ�ͯ4��\u0000�F���q�#,���uS�jOc��\u001ejWq�^�*��\u0016�8u0�!�6xF�ޒ�\u001e��E���5���!u��,��z��/�;����.�L���R���[ܹ1��\u0000\u0000\u0000\u0000�\u001dF\u0000\u0000�Z��z/��o�s<�|ڲR�kf\u0016'_��(@�2�H��ພs�d�-mm[^\u0011�\u000fQd\u0007���R4E�0����I��BZr��Ԛg��Һ����BU?42;��\u0007H6Y�0����6�ԟt��Dn-�t~B������:��J:[��:�k(c/�uwwϯ${}���\u000em+\u00000�}��56�o�rKk��\u001a����O��\u0018���ű6�\n,��\u0004\u0000�Q��4_��\u0010���ё\u0016��\u0007[��[\u0011�h\u0012\\ZaI\u0006\u0000��$\u001d%���4iK�ܞ�J��x�kڿt�?��\u001f\u0000\u0000\u0000\u0000�\u001c\b\u0000`T�c;�\u001a�y`��M\u0012\u0001\u0000�YD�ÒX\u000ew��\u0004�>a��ʵ\u001d��*�:]�Vhס.5��*���B��q�9�\u0019F�RI���}��:�>M����${|Y\"�\u0015�m���q�L���\u0003I/�S��$�(��:�kH��2�\u0007\n\u0000�\rg�'����Y�x��4�eҸ���~�\u000b���T#Mn\u0007\u0006}\t�ڭ��ɝ\u0002`a_\u0017�ߙ\rI�+Yt\u001df��\u0012(�LW�I}�����\u0015����\u000f\u001acd6S��h��J�\u0019�I�lݴ�2]r�P\u001d�\u0000\u0000\u0000\u0000\u0000<��\u0016>�z���Bb��h\u0005d�K�H����M���O��?���/\u001c�w��g\u0012=�dި+Սi���\u001b���\u001f��.��Gη0N�z� �\u0012\r�\u0000P\u000f���\u000eI�S��U���h���\n\u0014�i��\u001d��{�ߏ��Q��^\u0016����_�d�;p�]\u0003�K�I��g�\"��Wi��0�&)ؙ\u0015����a\u000b&�m��[���?6ivJ#��:ڥ���\u001e|Pg����ڗ�^4c]J�\u0000\u0000\u0000\u0000��\u0014�=\u0000�&w�(�\u0019���H{\u0002�Q][�\"�IԶ8l\u0000`ii�=�ޫ�(�U��4\u0002\u0017���zJk\u000e/\u0017{\u0018E~��Α8�z;�4�e�e���K���7��IR�����K�C�s��g�͹KZ\\ꪱ��֊\u0005���N+��\u001a����p)�cF���\u000fi��0b\u000f\u001d��rѪ�5\u0013���O{���&Ww5��w�/�?��д\u0007\u0002\u0000\u0000\u0000�т\u0000\u0000F575�=�3`�m�YT�5/\u001c={mY�\u000fw�)���yk�\u0013��o%\u001d#�k3���n��y��V�7�t���;�Mҏ$�^�~\u000fJ�%�\u001cI�:�\u001c).\u000fW�\u000e�pVy�3�΀�ޤZ�\u00007�H�;��T#E\u001b��\u0004��mA\u00023\u0019\u0001�$4�G�\u0002u��ﰡ�����5�Բ��+�9�$/�\u0004E�����Wm���#�\u0000\u0000\u0000\u0000 ���\u001a\u00000r��J��ͷO�K�E�\u0016{�k�����4�\u0017xF��R�\f�՛�z���;j\u0017I+$\u001d]�~?��rI=u�7���U,iS�z���{�_��jߒ:ֈ��?\u001f��ٮ?\u0019ވ�ۑn}���̎&�TZ�W�\u001d6\u001e�%�\u0006\u0002�L��`�%ݙ�\u001cOa&?�b�-}g�K���@\u0010\u0000\u0000\u0000\u0000$�\u0000\u0000\u0000`DXZ��\u0005��!���͹R՝~������D�\u000f]z~��ЈL�S\\=O�ʒvO{�\u0011腒~.��u�5(�#���-�����֏B�3�ا�b�\u0014�j\u000eq=X\u0018��\u001ak�*V̂\u0017\u0002�GӞ�Q<<��E�\u0003y�\u0011��}ᗧ�)��K\r9�Xs��om7>ێ1\u0000\u0000\u0000\u0000��\u0010\u0000\u0000\u0000�\b�j��J�\f7�f�\u001fl�e��^��'\u0002��Fe��b�W$+�=�\b���k%��\u001c�[$\u001d)i�$�C���,�1\u0000.�j�ǖ�˝�׿�10c�%*N\u001d��7�\"\u0002\u0000\b�lC�#4��-jM���\u0004j�E᢮?�G�����gy\u0016/�WuC���\u001e\u0004\u0000\u0000\u0000\u0000��\u0000\u0000\u0000��J������o�~���-\u0017{/0餐�q�\u0014WV�SҞc�*HZ�����5IGH��\u000e�2��>�:I\u000f\u0004*�kޒ���_��ڏ{��}��\u001ai39\u0001\u0000��\"\u0000�5�~���\u0000Yۢ�Trz�䷧=˳x����=\b\u0000\u0000\u0000\u0000d\t\u0001\u0000\u0000@�;\"^�vI\tm\u0011ꏼ��GV��#{�]}���\b<��Z/�&��J{��ZVZ�\u0016����\u001c�� �\u001f-��\t�$}W�k\u0013�Q�\t�N�\b�k3\u0015ũ\u0015Ƀ-�W#����\u0012w�X����u�5��\u0016�=\u00022ƽ/�\u0011\u001aŐkL�fc�׬��\u0017t�\u0016��\u0015r}AR#�\u00065���3�OM{\u0010\u0000\u0000\u0000\u0000Ȋ|�\u0003\u0000\u0000�\\V���I����\u0004[\\}�%�\r�胮)���忖�@�bP�Zw�5�������Q��\u0006���<⣒��x�\n\u0007���-�\u001bQOi��\u0016�7��rP�u����Z�}��׻Ic�M/���\u0013�\u0015{c�>�8���΅\u000f�\u0006I�.iM�}2+��e�ŧ��e��?�ϛ>t��1���\n�J\u0015���p�C�}�៭\u0018Y�F�\u001d�!5����\u0007~��Ƈ-��Es6\u0017���u/��<�X���\u001e�)�-�����C\n\u0017�\u000e�\u001b\r\u0000\u0000\u0000\u0000�Z\u0004\u0000\u0000\u0000\r��w���\t��/EQ�y\\S���+�\u000f��s�r\u0014�M��\u001cU��~���%�\u000b�#�?#i�m~�ι_�����Ī�9����\u0013ꕆ�K:;�����I*J\"�R��E�o��.�)i�\u0000�\u000e��e��?����k�y�\u0014_\u0011`��Ŋ6G\ry\u0003.0�U,�ټ\u001a��n*-iVq��Ѕ�жp��e:t���,7+J~X�3=ɋ\u00145_(��i\u000f\u0002\u0000\u0000\u0000\u0000#\u001d\u0001\u0000\u0000@�Z��5�F��K���M\u001a��>hii�\u0001Q�\u000f'c���k�\r�ɿ)\u0016Y!j\u0014זz�Hz_�.�(�\u0005�S��\u0019��S$%�S�FI�8�\"\u0014�_a�b�R��b���<����B���\u00053W\u0005�)u9U7;[\u0000\u0000�h���×�6m,��.�\u0019�tJ\\ު�\u001f˴t`��N���2�T#\u001c\u0011i����k\u0017\u0016\u0016N�Sڣ\u0000\u0000\u0000\u0000�HF\u0000\u0000\u0000АV�V�h·$\u0015����ߚS<h���<���n�~��N�?�ג�\u0019�0jy���\u0000\u0000 \u0000IDATWu}Xa?\u0014�WQ�ή⾿��\u0019\u0001\u000b7�&IK$�K��͒�\"iuB�G%�.���\u0014jffGHZ.󩵼d���\u000b1O#0�?�\n{��I�v��A�&禴\u0007@�-�6���\u0001I�!˚���R\u0000�q.oՌ\u001eI=�g��T��'K:QҋS����-v\u0001\u0000\u0000\u0000\u0000��\u0010\u0000\u0000\u00004�\u0001��\u0005�_�`��Ur\u0017��V���I��rB�9�����i��\u000f�(6~�?��$��\u0018uV�V��'�3�\u0001˽�r��*N�?D��i��hWk�ۉϒthB�WHz�����Z�\u000b����.�^��5\u0017s\u001d�q��˙���:q.3\u0001��q���o�\\Q��\u000e�*>�}���C�\u0003F,��[�$\u001d\u0014�l$�V��C�l4c/��V�9*�>޷���+�;��VI/��0�o}�ԕ\u001f|ᗧ�\u001e\u000f\u0000\u0000\u0000\u0000;)�-�\u0000\u0000x�e����?�p�%]��t׎>���ǿQ�.�f�\u0012�63��$Uƴ� T-H���7���@��QnVWq� ���T\u001d\u00177���_�'\u0013�}������.\u000bQ�M\u0007���T�s�ܶh�-!�i\bũ\u0015I��,\u0019)�_�z���6xI���5\u001bV�\u0018�-��߶\u0005�\u001f(�ky�\\�]�\rI\u000f�q�ֶ1�o�c?\u0000\u0000\u0000\u0000�\u001c\u0002\u0000\u0000��R.����/L���v����1�\u0018�9��\u001d\rXO\u001e5�p��6%s\u0017|�<�����*�s{�z���F�ދ$�M���5�=�\u000e\u001f݁�gq�})�>������f1e����u�\u000b\u0012\u0000\u0000�`\t\u001c\u000bc�6������6���JaQ状�3N*�ӷ�do�p@l0�ֱ�uI�\u0000\u0000\u0000\u0000�,#\u0000\u0000\u0000h\u0018=�9��_Q��O���'�ک���\b5���\u0013���\"�\u0003B�\u001c\u0019����>�܃]oy5���Y܈�{���\u0004�~G�)��\u0004j�IZ/�~���\u0005(��tT\r���(��n�\u0014���~\\�(g��9�\u0011��(\u001bG~j\u0012uG�+�T\u000b\u000bg\\WX����G{��(i}r\r�%��\u0006\u0000\u0000\u0000��#\u0000\u0000\u0000H��ҭm=�V_&����n����\u001a\u001e��@sl����\bT�\t.���5G�|5nO��\u0005��.�ݘ���\u0010��R�\u0011��\u0005\tԼV����\u001d��iO ���/��M{��l�\u0002h���\u001e9�<.p�Qť��CPo9��'T�\u001d}s�eQZҸE�\u001fi]�9��\u001cwH�_\t���P]\u0000\u0000\u0000\u0000\u0018\u0015\b\u0000\u0000\u0000R�s�__9\u00107�(�\u0013��д���SvjAii�VI��\\�_.\u000fTk��$�<�`���\u0019�f���c$�(D-�\u001e(\u0016�/^{mwW'��R�]2\u001es���*̖��N[����6�<F\u0016���{\u0014:\u00000fl���\u001e�Q���!H��\u0005]wI�[\u0002�s\u0016U/~�g-H\u001a��G\u000b\u000b��C��T\t\\~���\u0000\u0000\u0000\u0000`T!\u0000\u0000\u0000HEOi��=�z/�E���m�ݱ���.\u0003�J�\u001eR�\u000f~-����yk:%o�;�,����\u001d\u001c������p?+\u0005�����i&M\t]�Fg$P��\u001a\u000e\u0001�����s�IKS\u001c!�<�d\u0000�m�oo�t_Țnv�J+�!k6*o�$�\u0013H��\u0010�Ǥk\u0012)������\u0012�=�\u0015\u0016t}�L��e\u00139�\t\u0000\u0000\u0000\u0000F\u000b\u0002\u0000\u0000���)�ٯg^�W\u0015W{�z��-�oSl��4�����\u0016p\u000byμ�0\\�a��?\u0016�f\u0012\\>\u0018��Y���5�*!?|\u000e~�U�F��/��\u000e\u0000!]/�\u001c�&��)�c\u0000~ղhV\u0012w�X�=|�b����\u001f\f\\�!5U����Hz��ӯ�%��HA���\u001eb���g�~�\u001b�\u0006rC_��%`ɭ\u0001k\u0001\u0000\u0000\u0000��C\u0000\u0000\u0000��ri�^ˊ�\u001f.���s�~�\\���w��>�Y����\u0012�46�8�^|M�\u0017�*�s���M\n�\b�\u0004�\u0012X��7^����\bY12\u000by�w[ZZ31T�e�5oq��P�\u00029Q�\u0003=\u0017\u0007��\u001d����#��4z���4��K��q�&?4�Q^��.2>��9���\u0004�\"\u0005m�o��\u0002��$M���z�\u0000��\\�ҁ��]��¹KZ�0�3z��go�tW��\u001b\u0003�\u0002\u0000\u0000\u0000�Q�\u0000\u0000\u0000 �%�[�˟Z=�\\�}�sW�g^�{���{lw����\u0005�4�{~���y�\u0016�sա\u0000�<���|�ņe��v��k!jՃ)Z�@�\\��rNȂq΂^�\u001a\u0007���K���ؿ\u0011�V@��w&P�w\t���*����\u000fR�\\�P*}�U}?��H�fq���\u0015\u0013\u0002��!�g.?�on���귵mX/�C�u�3uZyL�HA�\u0018�,���.��mi���d��d�wZ��\u0003��X\u001c�$�m}}����n����AIʹ\r��+�I��\b\u0000\u0000\u0000\u0000�ƨ8'\u0012\u0000�c��.�)�n��WZN�q&�u���1�=R�X2�\u0004>��)�)ʝ0�JUk-\u0014U��(��æ�]s�\u001d�������~f=�u�[\u001c�H��p�%+���%�y��ԥ��?�U��2D���=\n8������ot\u0016���]m+J��ű~��\u001f�\u0007�jI{%P�j���nBn�tR�C$�u������\u0016w>T���h�f�Q�T����'�^�~��<�ua�M�k?��g-�7\u0017�>&׻#���\u001a\u0015�lUw�a�?Ze��f�W��\b\\\u0017)�Z�ˑ��Rr;N5���s˳�3r\u001fm_0��P�7�]ޫZ�I֤����|g�4כ��{�]����/��\r5�s�;}ف\u0016E\u0001��\u0016��\t\u0000\u0000\u0000\u0000�\u0011\u0001\u0000\u0000�3�o��̟��\ri}�Q��>��(6��\u0007�\u0003��K�=?��%�븝\t(,-�; ��\u001eI��N������\u0012)���h���\u0013f\u0016�\\��/���n���zj5�\\:���ߟ��-��\u000f\f�Ao\u0006�-��\u0015+K+��Z�Z��\u0007/�Ԛ}�HeI�C\u000e\u0015�Ԅ�\u001e�P�\u0010\u0006�\u001e�\u001e�������G�#��w�[���\\5��3g��\n�3�i/�~;�]���}��h�����T��7�ꍊ�����*)�W���W�\u0003\u0000������q}�Pq�s�A^*E}\u001b�x[$�ܺ�3��\u000e�M��Y\u000f\u000ft/���&�jz�՛���WF�}���\u0019���ďƥ������b��&ʹڞKy��o�����]~�)^ܺ���5�{n�R���υ-�\n[\u000f\u0000\u0000\u0000\u0000F\u0017\u0002\u0000\u0000���~�|��`\u001f \u001e[�g}O�w���m�G\u0017\u000e�]z�'���>o�\u0003��%s�mik\u001b<=2;GR{�Y�c�y���9�w��q�{�b����[����\\��Y��\u001e~�wW|�wB��_\u0019�:�Yѱ�\n9EW<S��Ń�������Pә�k ޫ��O�������]�\u0013�,�\u001b;P�?\u001aE�1%�=\u000b��i\u000f��\u0014����WH:�N\u001d�lm���P�fi\u001a�h����\\zk\u0002�]�L��N����ri��Y\u000fo�a���%�M\u0013�_\u001d�\u001f#\u001d�6Y�O\nI�[%�<��g\fll;6�^��8W)��p���\u0017t\u001f9�<�y�\u000e�Xӥ#�a��n67�9P#�n��rM�R�$�%�\u0010G~B���=��=��&�Sţ��-����}\u001c�$�yR�\u001e�J��y�\n���͎�4>��Hy���\u0013��{n0���:��?�_:�\u001f�\u001a<|�5�-�#�d��P5%�#�\b \u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000@\u0016m�츙Ŏ�C\u00176�V\u001f��<d�\u0019�||Gy^�׫q��U�I7\u0017����\u0006�\u001c�\\�\u0001����g\u0015��.K��皸\\E�E�k\u0012��)��(Ω��;hR�K�ʩY��\u0007�n{�ʇ\u0017�\u0002/nۛ����=��|CV�N�-����\u001d �\u001c�\\�\u0001����f��2�\u001dv��^��\u0000HRt�\u0014�%\u0000�Ry�ϽiC=z5����l���D\u001a������s���.���\u0015�n�\"�q삮����Ғ�M��w�⃢�_�f�ք��D�i��nN��KSL��\\5�����Xg�Q�ƎiRAaw\u0002B�\n\u0017�~������.�c�\t&;Y�]R�b�w�\u0007%m�4$�I\u0013�Ʃ��)�Lr%p,��ؑ�~d4f����?�T��u�����3;\u0016���b7�+�jQ�\\I{\u0006\u001e�����_\u0004�\t\u0000\u0000\u0000\u0000�\n\u0001\u0000�j�u��e��|\u000f��<��k��zM��`��\u001cj\u001ad�K}�t|gi�O\u0012��B\u0007\u0000��w�\u0019��g\u001c\u0011�n�)�:�\u001e�4F�=\n\u0007��\\j�7��{'��z�D\u0003\u0000O6֥�;�@�n�d�n\u001f'���hn��ލ=E_����\u000b\u0007jw�Z\u001b�|�'y����\u0012)*,������-�^R�v�b��ǵ/�s�{���My^�Q&;�M��4�]�s�\u0011I\u001b]��,\u001e>��m\u0017I-�^$�� z,�4���\u0018/J�G�GV���H\u001en'\u0018�W������6�W��2c��?�$ /i��i2S�����\u001fd��Ƕ&��n��\u0017���&U6Wr�6�j�,�{\\��M��L�5�P�\u0012�<ɤ\u001fh'�J\u0002\u0000\u0000\u0000\u0000�\u0013\u0001\u0000�n�\u001ei��1����Y��?�q�-\u0012\u000e�PM�ߏ��ሸ��\u0006{���l��\u0010�fQ<����\u001f�j`��\\����?f�d���_\u001bf�?��\u0019i��-�t�K�\t�\u0019���{ę��\u0000H��.w�y\t��o�rK\u0013��p�ƃ�l��\u001c-ib=��Ԧ����\u001aI\u0001���c~ӿqsBG� S�S+չ���Y�J�}y&�J:J����t���bU\u0014I��\u0015I\u001e�N\u0001�j�j_�K'\u0000\u0000\u0000\u0000Ȱ(�\u0001�t���'x\u001aS�3UU{�\u0004\f�7��^K�ǶD��v�u\u00177��{\u0014�?Y��Jp�_�Z��O$mJ��hТ�/$�O{�m鋶\\'i�lG��:�\u001e\u0000ɋ�v�\u0012O#�5�pZ�=\u001a�.\u0017\u001d��#�Obs��V�Z������0n���2;%�9�\u001dL�m�x�\u001di�\u0001\u0000\u0000\u0000\u0000#\u001d\u0001\u0000�j\u001e�zҞ�,ֲZk̚7�&I�\u0006\u0018' �I��)[j/S��'����\u0005a��컕���;�S\u0012�{?��Ϡ�˓�S�\u0006\f�<���>�����{N񠭒}7�9�C#\\��=\u0000�7��\u0019�L�u�=LQÿ&$���ΟI�0�9F\u0012s};�\u00190r\u0014\u0016̸B�\u0005iρ�`����\u001fO{\f\u0000\u0000\u0000\u0000�\u0002\u0002\u0000\u0018�f~zү$�J{�'�/���j��rs�j�y\u0002�/��\u0012U��Hj�3!M�>��O��ŜU&����w��8q�����]�\u0016�b5杚�Ƒ�7�!�Wd�W5\u0012�7��Xz�\u0010�Ʋ�=:1�!$��=\u0000�#N6���uȯM�~�+������A�s�\u0014��l�֤�iρ�����\u001c��+�9��\\:���o�i�8\u0000\u0000\u0000\u0000�0\u0002\u0000\u0018�\\�\u001e��FYPv;cڅ\u0007\u0007����+\\,�!�O4�G]�IA��Iw�lq�Z\u0001<T�J1�!F-��r��Ҕ%�n�Y�r�L�]��b�\u000f�\u0012�-�9�׌�?K�ô�ؖ�bǝ2]��\u001cO��Gr9�'�9D\u0000`�p�.�4�P�\u001fjqg�;\u0005�d�b�:��DI�H{�\u0011��9U�>��\u0018\u0018A\\^���dI�O{\u0014<�\u0005m\u000b:\t@\u0001\u0000\u0000\u0000@ \u0004\u00000�͜?闒>����5�\\���`w��*�1��fKz T͝t�\u0002ߑ�jw�����o�~E��f\u0017��.���M�c��O�L���\u001b�ܤ���iL��Y�,�1vT.�s$\r�=ǶT��OJz8�9�`~����F��zL�\u0003�>�\u0017�zXR2w雏����Eq�����,I+�\u001ee$(��w�K�M{\u000e� WΩ\u0016��p�\\_H{\u0014<���\u0019\u0000\u0000\u0000\u0000\u0000�\u0010\u0000\u0000$u�&_\"�[$=T��.�I:�kޔ����U�3��H�~\u0013��vp�_�\u001am���┍!\u000bO-N�\u0014r�\u001c#�EJe[n�=v{mWq_�Ы���urkt��]�)W�=�����O��#�9$�\\+�m�Iiϱ3�\u0017'��+��_h�ϛ�\"{�\u001a��\u0002��=���=\u0005F)�$�\u0001x�����\u0004�H/���M���f��;i���SU\u001c�_��G�\bR,ƅE�\u001f��[�y�Ϩa�W\u000b���G�\b?_\u0001\u0000\u0000\u0000@v\u0010\u0000\u0000\u001e�U�r�E>�\\gK�Q��\u0004�U$�E��T+є�\u0000B2f\u0015;��?��\u001e�[M���\rI�z�}2}+vm׼)�Z<�/�&S�S+]���\u0016��2��dk���K�\u0013���\u001a���Y�'�)�^x�[����@��3�O������8�CRgq�U��1\u0010��x��-s�\u0007%�������\u00177�\nO�U�Xj�Ly��sQ�q�����ґ�¦��6\u001c^\f���\u0006zmo\b�\u001c6T�h�{\\�\u0011I�i����.�y��ޭ�w�SXص(��\u0006I�Ҟe\u0014�*yw���\u000f��9�0\u0000\u0000\u0000\u0000 �|�\u0003\u0000��K�\u000fr�'��*I��أM�'��_�ж��w8�)ש�||jO�7�6O8W�����X��'�9�qw�l�\\�Df�$��4|��X�_/K�O��.��\u001f>\u0010OX�c6w�\u001e��\"\u001f�ӊ�\u001f\f>c�T$��e_�9��F�+h����=�֌��ܺ7w��rzk��\u0013��~�rR!\u001e3N�cӞ�tΟ�ٞy���:+��?�\u001a��rlq��)�\u0006�]2k��.���O\fU���P�2��m���o��Y\u0014W�C�\u001ei{y�߷�\u0016t�����!��$B��\u0001�\u0017u���s~zhse�\u000br�[J⿒�\u0014�Z\u001c��z��?�=\b\u0000\u0000\u0000\u0000d\u0015\u0001\u0000dʲs׾�,*K^\bR�a�\u001c\u0003H�ϖ���\u000ek�kf��<I\u0007Vb��\\Z����{S\u001e���g�\u0015�~l\u0015_���)�Gr�ҝk{t���^v�{��B���e��?��|����)\u001e�u��z[��5_��Դ�y.]�&�]>��\u001e7-��T����7\u0006�-\u001f����H\u0017_.Y�\u0000�=����^�\u0011�\\��-�~��_r��������\u001ei��\u001c����|���ލ�\u0016v~��{�Ñ��.�ջ?F�]?��\r�޻y�_q�\u0017��ڴgz*W������5���Kt�aCi\u000f\u0003\u0000\u0000\u0000\u0000YF\u0000\u0000�Q*):��oJ\n��\u000f$c��-����\u0007i\u0000\u001b%���Fs�l�r?�Z�g�ns<s~����]�������\u0004[�%E'u͛��\u0004{�bΕ�J\u001d\u001f*�z걾�\u0006^��?�K�����\r\u001f]pP���Q��7�8yy�=�\u001dR\u0018������\u001f��[��LW�Xd��m�rN�U���\\qy�WO��\u0003��I{�'���Ⱦ�(�V�\u0005]��5F��\u0019K6ν�����j�E\\4��E�o���\u0003���v�Ge���L2�!�y���/��z|{l��&�\u001ah'\f�Vǲ/\u000e�^����ޔ�<\u0000\u0000\u0000\u00000\u001a\u0010\u0000@f\u001cV]�23MI{\u000e`�\\Ǭ,��7�Y�\t�*��$�#�]&���;�(�*�sg����zg��q�ɫ\u000e��E�O2��K�3Tm��.iQK�咩Ń����h:���Zq�2���m�\u001f��Z���\u001a\u001c���<x��ɫV�V\u001e2P��\u001f2����\u0002�v���Z�-_����\bT�Z����]�p��,��\u0018iԸpZA�@�҂�\rGΌM�aқ%��0�mr�:2�����5�q=�\u0016M_-�������dEI/K��I��W��T}����Z�����\u001e�~�d�)D�i�m��L�o\u0016\u0016����>�Z\u0017u�^�k��\\�[T����g�����h�������U,�l�\u0001\u0000\u0000\u0000\u0000�c�\r�9\rP����f+Ӟ\u0003�\u001e\u0016���� �/=w��-\u0017���E��/��P��=W�jn���Nܐ�E�����UM��>�X��S�7���$\u0003r�p��D뵤s�-�z���}��ͯى^Ϩ��[g\u0017��{�z;�|��1�5z��o��7[��:W$�$��c�]:����!�\\YZ�\u001f�'\u001ec�w�l�N^�͒V��Z��ߞ�d�-��\u0006��Շ*����~����+i�P3� �%�>T��3W�fU?8H1�C����\u0014�ֳ�?�gwUr/����\u0017\u0016θ.�H�h�K'V���B֌4t[ˢY;�<I��%-\u0003j{S\u001c�ˤW��R�\u000fzo��V�|�+�U\u0014W~�P߃����k-�\u0013M�)ib��\\Zc�_Ȣ�\u0015���\u001d���on�\r�(��1^}�pQW�!��Ͼ��eh�+C��Eտ�]�uWȚ;��%�M{�{M\u0014�Ǹ�&�\\Ҙ�\u001d�%�����\"_Yh��_\u0015��򿴤y�q�V\u0015\u001fi�#\u0015��r�'\u0005?��.�n2�_X����o\u001b��+�T\u0003�\u0000\u0000\u0000\u0000\u0000l'\u0002\u0000Ȍ��W�Л�>I��g\u0001�a]Wi򤴇@��,�\u001b;���jU��� sM��E��kx�֪��rm���)�nΙn�D-��U�c ��\u001bǒҭ��ձ�T�/�H/1�\u0004\u001f>&`��?��$Œ�$\rI�(����]r��9�.h�I�Q����c\u001d�����\u0000���[���k��\u0017���]-�s�\u0001Ԭ�r�澁C�\u000e2�&��\tR���\u0017�<�q&�|��H��l�����nz���\u0016�v�G��9˯\u001e�`ںF�ÿ\u0016��{�3��Mv�\u0014O�l�\\���ͤȥؤ-�\r�|0�\u001e2�]��.���ŕߍ��\u0003\u0012TZҼ���򸪃ܴ���#���hW�Ǹ��ϿO��K[��\u0001���M\u0003���]�Ffk�(���ϯ��F~\u001f��\u0013K{�io����\u0005��%k��˚���pi���C�=�{ͽ�#��q�/�\u0016M�^�\u0003\u0000\u0000\u0000\u0000��\u0000\u00002eY��k&���\u001c�sq��3�O�Z�s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 [��\u0007\u0000B\u001a�4�#f�,Y4�!�K,�\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \t�\u0000�L�9w��d�\u001a���,�0�����M���{Ҟ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f�\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\tO�\u0000\u0000\t]IDATd\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0006\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000��۵\u0003\u0019\u0000\u0000\u0000�A�����#\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\bb�\u000b����\u0000\u0000\u0000\u0000IEND�B`�","usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\firebaseConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\utils\\analytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\utils\\auth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\utils\\churn.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\utils\\csv.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\utils\\forecast.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\utils\\summarizer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\workers\\bootstrapHoltWorker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"D:\\BrandStuff\\BreackeyPortfolio\\ProjectTracker\\jarvis360\\client\\src\\workers\\holtBootstrapWorker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]}]