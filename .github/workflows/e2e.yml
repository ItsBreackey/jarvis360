name: E2E Tests

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache node
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django migrations
        run: |
          python manage.py migrate --noinput

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Build client
        run: |
          cd client
          npm run build

      - name: Install Playwright browsers
        run: |
          cd client
          npx playwright install --with-deps

      - name: Start servers (Django + static client)
        run: |
          # Start Django in background and capture logs
          nohup python manage.py runserver 127.0.0.1:8000 > django.log 2>&1 &
          # Serve built client
          cd client
          nohup npx serve -s build -l 3000 > test-results/serve.log 2>&1 &
          # wait for the client to be reachable
          npx wait-on http://127.0.0.1:3000

      - name: Run Playwright E2E
        id: playwright_run
        working-directory: client
        continue-on-error: true
        run: |
          npx playwright test --project=chromium --reporter=github

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report/**

      - name: Upload test-results and logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: |
            client/test-results/**
            django.log
            client/test-results/serve.log

      - name: Fail if Playwright tests failed
        if: ${{ steps.playwright_run.outcome != 'success' }}
        run: |
          echo "Playwright tests failed; see uploaded artifacts for details." >&2
          exit 1
